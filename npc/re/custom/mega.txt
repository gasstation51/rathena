prontera,2,1,3,	script	라임 이베노르::mega	4_F_EDEN_OFFICER,{
	// 이벤트 설정
//===========================
set $QuestEvent,0; // 0: 이벤트 끔 , 1: 이벤트 시작
set $QuestPer,1; // 단위: 퍼센트
//======== 설정 끝 ===========
	callsub QuestSettings;
	mes "[라임 이베노르]";
	mes "안녕하세요!";
	mes "찾아가는 서비스, 부스터 콜 보름에";
	mes "응답했습니다~~";
	mes "도움이 필요하신가요?";
	next;
		if (countitem(101473) > 0){
			mes "[라임 이베노르]";
			mes "현재 프리미엄 부스터 콜을 사용하고 계십니다.";
			next;
		}
	else
		if(countitem(101473) == 0){
			mes "[라임 이베노르]";
			mes "현재 사용하고 계시는 부스터 콜은";
			mes "일반등급으로, 원하시면 ^0000cd냥다래 열매";
			mes "150개를 사용해 프리미엄 등급으로 교체^000000";
			mes "가 가능합니다.";
			next;
			mes "[라임 이베노르]";
			mes "프리미엄으로 업그레이드 하시면";
			mes "에피소드 클리어 특전이나 상점에";
			mes "상품이 추가되는 등 혜택이 더";
			mes "많답니다.";
			mes "업그레이드를 원하시면 부스터 콜";
			mes "업그레이드를 요청해주세요";
			close2;
		}
	switch(select("부스터 상점:부스터 미션:부스터 인챈트:레벨업 티켓 사용:도움이 필요해!:부스터 콜 업그레이드")) {
			case 1:
				mes "[라임 이베노르]";
				mes "부스터 콜에서 이용할 수 있는 각종";
				mes "상점을 열어드립니다.";
				mes "어떤 상점을 열어드릴까요?";
				next;
				switch(select("부스터 코인 상점:환전 서비스:부스터 미션 상점:취소")){
					case 1:
						mes "[라임 이베노르]";
						mes "^0000cd부스터 코인^000000은 부스터 박스에서 일정";
						mes "수량 얻을 수 있습니다.";
						mes "부스터 코인으로 필요한 장비 교환권을 살 수 있죠?";
						next;
						mes "[라임 이베노르]";
						mes "프리미엄 이용시 상점 품목이 추가되니";
						mes "프리미엄 업그레이드도 한번 고려해";
						mes "보세요.";
						mes "자, 필요한 물건과 교환을 해볼까요?";
						if(countitem(101473) > 0){
							close2;
							callshop "mega00";
							end;
							}
						else
							if(countitem(101473) <= 0){
							close2;
							callshop "mega01";
							end;
							}
					case 2:
						mes "[라임 이베노르]";
						mes "환전 서비스는 에피소드 19를 클리어를";
						mes "한 모험가님을 위해 열어드리고";
						mes "있습니다.";
						mes "조금 더 햄내서 에피소드 19를";
						mes "클리어 해봐요.";
						close2;
						callshop "mega02";
						end;
					case 3:
						mes "[라임 이베노르]";
						mes "^CCCCCC<ITEM>[부스터 미션 티켓]<INFO>1000984</INFO></ITEM>^000000은 부스터 미션을";
						mes "통해 얻을 수 있습니다.";
						mes "부스터 미션을 수행하고 모은 티켓으로";
						mes "필요한 아이템을 교환하세요.";
						close2;
						callshop "mega03";
						end;
					case 4:
						mes "[라임 이베노르]";
						mes "언제든 찾아주시구려.";
						close;
						end;
					}			
			case 2:
				mes "[라임 이베노르]";
				mes "단 한번 수행 가능한 미션을 드리고";
				mes "있습니다.";
				mes "제시된 미션을 클리어 하시면 부스터";
				mes "미션 티켓과 여러가지 보상을 받을 수";
				mes "있답니다.";
				next;
				mes "[라임 이베노르]";
				mes "부스터 미션을 수행하지 못하는분들을";
				mes "위한 사냥 의뢰도 마련되어 있습니다.";
				mes "부스터 미션 티켓 대신 경험치를";
				mes "보상으로 드리고 있으니 성장에 도움이";
				mes "되실겁니다.";
				next;

				switch(select("1~80레벨 사냥 의뢰:80~150레벨 부스터 미션 도전:160~240레벨 부스터 미션도전:다른 사냥 퀘스트는 없나요?:")){
					case 1:
						mes "[라임 이베노르]";
						mes "1~80레벨까지 수행 가능한 사냥";
						mes "의뢰입니다.";
						mes "한번씩 수행가능하시구요.";
						mes "성장에 필요한 경험치를 잔뜩 보상으로";
						mes "받을 수 있답니다.";
						next;
						B_Menu1:
						callsub QuestWaitSet;
						switch(select(.QLv1_1$+"Lv1-파브르를 잡아보자!"+.QLv1_1c$+":"+.QLv1_2$+"Lv11-폐이욘 필드 탐험"+.QLv1_2c$+":"+.QLv1_3$+"Lv20-지하수로 탐험"+.QLv1_3c$+":"+.QLv1_4$+"Lv35-묘르닐 폐광 탐험"+.QLv1_4c$+":"+.QLv1_5$+"Lv-50이즈루드해저동굴 탐험"+.QLv1_5c$+":"+.QLv1_6$+"Lv65-폐이욘 던전 탐험"+.QLv1_6c$+":"+.QLv1_7$+"Lv80-알데바란 시계탑 탐험"+.QLv1_7c$+":취소")) {

							case 1:
								if((isbegin_quest(.Q1_1_No) == 1 && checkquest(.Q1_1_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu1;
								}

								mes "[라임 이베노르]";
								mes "lv1-파브르를 잡아보자!퀘스트를";
								mes "진행하시겠어요?";
								mes "프론테라, 게펜 인근에서 파브르를";
								mes "사냥하는 퀘스트입니다.";
								next;
								if(isbegin_quest(.Q1_1_No) == 1 && checkquest(.Q1_1_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "Lv-1파브르를잡아보자 퀘스트를";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "경험치를 드리겠습니다.";
									getexp .Q1_1_Exp,.Q1_1_Jexp;
									set .Q1_1_NO,1;
									completequest .Q1_1_No;
									next;
									goto B_Menu1;
								}
								if(isbegin_quest(.Q1_1_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu1;
								}
								switch(select("받는다:거절한다")){
									case 1:
										if(isbegin_quest(.Q1_1_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q1_1_No;
											next;
											goto B_Menu1;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu1;
								}

							case 2:
								if((isbegin_quest(.Q1_2_No) == 1 && checkquest(.Q1_2_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu1;
								}
								if(BaseLevel < 11) goto LevelLow;
								mes "[라임 이베노르]";
								mes "lv11-폐이욘 필드 탐험 퀘스트를";
								mes "진행하시겠어요?";
								mes "폐이욘 필드에서";
								mes "사냥하는 퀘스트입니다.";
								next;
							
								if(isbegin_quest(.Q1_2_No) == 1 && checkquest(.Q1_2_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "Lv-11폐이욘 필드 탐험 퀘스트를";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "경험치를 드리겠습니다.";
									getexp .Q1_2_Exp,.Q1_2_Jexp;
									set .Q1_2_NO,1;
									completequest .Q1_2_No;
									next;
									goto B_Menu1;
								}
								if(isbegin_quest(.Q1_2_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu1;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q1_2_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q1_2_No;
											next;
											goto B_Menu1;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu1;
									}

							case 3:
								if((isbegin_quest(.Q1_3_No) == 1 && checkquest(.Q1_3_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu1;
								}
								if(BaseLevel < 20) goto LevelLow;
								mes "[라임 이베노르]";
								mes "lv20-지하수 탐험 퀘스트를";
								mes "진행하시겠어요?";
								mes "지하수 던전에서";
								mes "사냥하는 퀘스트입니다.";
								next;
							
								if(isbegin_quest(.Q1_3_No) == 1 && checkquest(.Q1_3_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "Lv20-지하수 탐험 퀘스트를";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "경험치를 드리겠습니다.";
									getexp .Q1_3_Exp,.Q1_3_Jexp;
									set .Q1_3_NO,1;
									completequest .Q1_3_No;
									next;
									goto B_Menu1;
								}
								if(isbegin_quest(.Q1_3_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu1;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q1_3_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q1_3_No;
											next;
											goto B_Menu1;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu1;
									}

							case 4:
								if((isbegin_quest(.Q1_4_No) == 1 && checkquest(.Q1_4_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu1;
								}
								if(BaseLevel < 35) goto LevelLow;
								mes "[라임 이베노르]";
								mes "lv35-묘르닐 폐광 탐험 퀘스트를";
								mes "진행하시겠어요?";
								mes "묘르닐 던전에서";
								mes "사냥하는 퀘스트입니다.";
								next;
							
								if(isbegin_quest(.Q1_4_No) == 1 && checkquest(.Q1_4_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "lv35-묘르닐 폐광 탐험 퀘스트를";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "경험치를 드리겠습니다.";
									getexp .Q1_4_Exp,.Q1_4_Jexp;
									set .Q1_4_NO,1;
									completequest .Q1_4_No;
									next;
									goto B_Menu1;
								}
								if(isbegin_quest(.Q1_4_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu1;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q1_4_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q1_4_No;
											next;
											goto B_Menu1;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu1;
									}
							case 5:
								if((isbegin_quest(.Q1_5_No) == 1 && checkquest(.Q1_5_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu1;
								}
								if(BaseLevel < 50) goto LevelLow;
								mes "[라임 이베노르]";
								mes "lv50-이즈루드 해저동굴 탐험 퀘스트를";
								mes "진행하시겠어요?";
								mes "이즈루드 던전에서";
								mes "사냥하는 퀘스트입니다.";
								next;
							
								if(isbegin_quest(.Q1_5_No) == 1 && checkquest(.Q1_5_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "lv50-이즈루드 해저동굴 탐험 퀘스트를";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "경험치를 드리겠습니다.";
									getexp .Q1_5_Exp,.Q1_5_Jexp;
									set .Q1_5_NO,1;
									completequest .Q1_5_No;
									next;
									goto B_Menu1;
								}
								if(isbegin_quest(.Q1_5_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu1;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q1_5_No) == 2)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q1_5_No;
											next;
											goto B_Menu1;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu1;
									}
							case 6:
								if((isbegin_quest(.Q1_6_No) == 1 && checkquest(.Q1_6_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu1;
								}
								if(BaseLevel < 65) goto LevelLow;
								mes "[라임 이베노르]";
								mes "lv65-폐이욘 던전 탐험 퀘스트를";
								mes "진행하시겠어요?";
								mes "폐이욘 던전에서";
								mes "사냥하는 퀘스트입니다.";
								next;
							
								if(isbegin_quest(.Q1_6_No) == 1 && checkquest(.Q1_6_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "lv65-폐이욘 던전 탐험 퀘스트를";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "경험치를 드리겠습니다.";
									getexp .Q1_6_Exp,.Q1_6_Jexp;
									set .Q1_6_NO,1;
									completequest .Q1_6_No;
									next;
									goto B_Menu1;
								}
								if(isbegin_quest(.Q1_6_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu1;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q1_6_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q1_6_No;
											next;
											goto B_Menu1;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu1;
									}
							case 7:
								if((isbegin_quest(.Q1_7_No) == 1 && checkquest(.Q1_7_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu1;
								}
								if(BaseLevel < 80) goto LevelLow;
								mes "[라임 이베노르]";
								mes "lv80-알데바란 시계탑 탐험 퀘스트를";
								mes "진행하시겠어요?";
								mes "시계탑 던전에서";
								mes "사냥하는 퀘스트입니다.";
								next;
							
								if(isbegin_quest(.Q1_7_No) == 1 && checkquest(.Q1_7_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "lv80-알데바란 시계탑 탐험 퀘스트를";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "경험치를 드리겠습니다.";
									getexp .Q1_7_Exp,.Q1_7_Jexp;
									set .Q1_7_NO,1;
									completequest .Q1_7_No;
									next;
									goto B_Menu1;
								}
								if(isbegin_quest(.Q1_7_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu1;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q1_7_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q1_7_No;
											next;
											goto B_Menu1;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu1;
									}
							case 8:
								mes "[라임 이베노르]";
								mes "필요하면 언제든 불러주세요.";
								close;
							}
					case 2:
						mes "[라임 이베노르]";
						mes "80~150레벨에 도전 가능한";
						mes "미션입니다..";
						next;
						B_Menu2:
						callsub QuestWaitSet;
						switch(select(.QLv2_1$+"미션1-EDDA 낮에 나온 반달"+.QLv2_1c$+":"+.QLv2_2$+"미션2-MD 게펜 마법 대회"+.QLv2_2c$+":"+.QLv2_3$+"미션3-MD 사라의 기억"+.QLv2_3c$+":"+.QLv2_4$+"미션4-환영 조사단 등록하기"+.QLv2_4c$+":"+.QLv2_5$+"미션5-환영 조사단 문라이트 의뢰 수행하기"+.QLv2_5c$+":"+.QLv2_6$+"미션6-환영 조사단 프로즌 의뢰 수행하기"+.QLv2_6c$+":"+.QLv2_7$+"미션7-MD 망령의 왕궁 도전하기"+.QLv2_7c$+":"+.QLv2_8$+"미션8-MD 옛 글래스트헤임 도전하기"+.QLv2_8c$+":"+.QLv2_9$+"미션9-환영 조사단 뱀파이어 의뢰 수행하기"+.QLv2_9c$+":"+.QLv2_10$+"미션10-환영 조사단 구양궁 의뢰 수행하기"+.QLv2_10c$+":"+.QLv2_11$+"미션11-환영 조사단 테디베어 의뢰 수행하기"+.QLv2_11c$+":취소")) {

							case 1:
								if(isbegin_quest(.Q2_1_No) == 1 ) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 80) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션1-EDDA 낮에 나온 반달 미션을";
								mes "진행하시겠어요?";
								next;
								if(isbegin_quest(.Q2_1_No) == 1 && checkquest(.Q2_1_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션1-EDDA 낮에 나온 반달 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개,얼어붙은 꿈3개를 드리겠습니다.";
									getexp .Q2_1_Exp,.Q2_1_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 6671,3;  // 얼어붙은 꿈
									set .Q2_1_NO,1;
									completequest .Q2_1_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_1_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")){
									case 1:
										if(isbegin_quest(.Q2_1_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_1_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
								}

							case 2:
								if((isbegin_quest(.Q2_2_No) == 1 && checkquest(.Q2_2_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 90) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션2-MD 게펜 마법 대회 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_2_No) == 1 && checkquest(.Q2_2_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션2-MD 게펜 마법 대회 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개,게펜 마법 대회 주화 50개를 드리겠습니다.";
									getexp .Q2_2_Exp,.Q2_2_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 6671,50; // 게펜 마법 대회 주화 
									set .Q2_2_NO,1;
									completequest .Q2_2_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_2_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_2_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_2_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}

							case 3:
								if((isbegin_quest(.Q2_3_No) == 1 && checkquest(.Q2_3_No,HUNTING) == 0)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 100) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션3-MD 사라의 기억 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_3_No) == 1 && checkquest(.Q2_3_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션3-MD 사라의 기억 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개를 드리겠습니다.";
									getexp .Q2_3_Exp,.Q2_3_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									set .Q2_3_NO,1;
									completequest .Q2_3_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_3_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_3_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_3_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}

							case 4:
								if((isbegin_quest(.Q2_4_No) == 1 && checkquest(.Q2_4_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 100) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션4-환영 조사단 등록하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_4_No) == 1 && checkquest(.Q2_4_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션4-환영 조사단 등록하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개를 드리겠습니다.";
									getexp .Q2_4_Exp,.Q2_4_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									set .Q2_4_NO,1;
									completequest .Q2_4_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_4_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_4_No) == 0)
										mes "[라임 이베노르]";
										mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
										mes "수 있답니다.";
										mes "완료 후에는 '부스터 콜' 아이템을";
										mes "사용해 저를 소환하시면 됩니다.";
										setquest .Q2_4_No;
										next;
										goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 5:
								if((isbegin_quest(.Q2_5_No) == 1 && checkquest(.Q2_5_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 100) goto LevelLow;
								mes "[라임 이베노르]";
								mes "미션5-환영 조사단 문라이트 의뢰 수행하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_5_No) == 1 && checkquest(.Q2_5_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션5-환영 조사단 문라이트 의뢰 수행하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q2_5_Exp,.Q2_5_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q2_5_NO,1;
									completequest .Q2_5_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_5_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_5_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_5_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 6:
								if((isbegin_quest(.Q2_6_No) == 1 && checkquest(.Q2_6_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 120) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션6-환영 조사단 프로즌 의뢰 수행하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_6_No) == 1 && checkquest(.Q2_6_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션6-환영 조사단 프로즌 의뢰 수행하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q2_6_Exp,.Q2_6_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q2_6_NO,1;
									completequest .Q2_6_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_6_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_6_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_6_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 7:
								if((isbegin_quest(.Q2_7_No) == 1 && checkquest(.Q2_7_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 120) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션7-MD 망령의 왕궁 도전하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_7_No) == 1 && checkquest(.Q2_7_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션7-MD 망령의 왕궁 도전하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 흙빛의 조각 25개를 드리겠습니다.";
									getexp .Q2_7_Exp,.Q2_7_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 6672,25; // 흙빛의 조각
									set .Q2_7_NO,1;
									completequest .Q2_7_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_7_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_7_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_7_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 8:
								if((isbegin_quest(.Q2_8_No) == 1 && checkquest(.Q2_8_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 130) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션8-MD 옛 글래스트헤임 도전하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_8_No) == 1 && checkquest(.Q2_8_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션8-MD 옛 글래스트헤임 도전하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 시간의 결정 25개,";
									mes "응고된 마력 10개를 드리겠습니다.";
									getexp .Q2_8_Exp,.Q2_8_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 6607,25; // 시간의 결정
									getitem 6608,10; // 응고된 마력
									set .Q2_8_NO,1;
									completequest .Q2_8_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_8_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_8_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_8_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 9:
								if((isbegin_quest(.Q2_9_No) == 1 && checkquest(.Q2_9_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 130) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션9-환영 조사단 뱀파이어 의뢰 수행하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_9_No) == 1 && checkquest(.Q2_9_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션9-환영 조사단 뱀파이어 의뢰 수행하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q2_9_Exp,.Q2_9_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q2_9_NO,1;
									completequest .Q2_9_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_9_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_9_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_9_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 10:
								if((isbegin_quest(.Q2_10_No) == 1 && checkquest(.Q2_10_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 150) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션10-환영 조사단 구양궁 의뢰 수행하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_10_No) == 1 && checkquest(.Q2_10_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션10-환영 조사단 구양궁 의뢰 수행하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q2_10_Exp,.Q2_10_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q2_10_NO,1;
									completequest .Q2_10_No;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_10_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_10_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_10_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 11:
								if((isbegin_quest(.Q2_11_No) == 1 && checkquest(.Q2_11_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu2;
								}
								if(BaseLevel < 150) goto LevelLow1;
								mes "[라임 이베노르]";
								mes "미션11-환영 조사단 테디베어 의뢰 수행하기 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q2_11_No) == 1 && checkquest(.Q2_11_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션11-환영 조사단 테디베어 의뢰 수행하기 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q2_11_Exp,.Q2_11_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									completequest .Q2_11_No;
									set .Q2_11_NO,1;
									next;
									goto B_Menu2;
								}
								if(isbegin_quest(.Q2_11_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu2;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q2_11_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q2_11_No;
											next;
											goto B_Menu2;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu2;
									}
							case 12:
								mes "[라임 이베노르]";
								mes "필요하면 언제든 불러주세요.";
								close;
							}
					case 3:
						mes "[라임 이베노르]";
						mes "160~250레벨에 도전 가능한";
						mes "미션입니다..";
						next;
						B_Menu3:
						callsub QuestWaitSet;
						switch(select(.QLv3_1$+"미션12-환영 조사단 루안다"+.QLv3_1c$+":"+.QLv3_2$+"미션13-환영 조사단 트윈스"+.QLv3_2c$+":"+.QLv3_3$+"미션14-MD 옛 글래스트헤임(상급)"+.QLv3_3c$+":"+.QLv3_4$+"미션15-환영 조사단 라비린스"+.QLv3_4c$+":"+.QLv3_5$+"미션16-EDDA 글래스트헤임(일반)"+.QLv3_5c$+":"+.QLv3_6$+"미션17-EDDA 생체연구소(탐사모드)"+.QLv3_6c$+":"+.QLv3_7$+"미션18-옛 글래스트헤임(도전)"+.QLv3_7c$+":"+.QLv3_8$+"미션19-환영 조사단 언더워터"+.QLv3_8c$+":"+.QLv3_9$+"미션20-MD 게펜 야간 투기장 3라운드"+.QLv3_9c$+":"+.QLv3_10$+"미션21-MD 회한의 무덤"+.QLv3_10c$+":"+.QLv3_11$+"미션22-MD 성좌의 탑"+.QLv3_11c$+":취소")) {

							case 1:
								if((isbegin_quest(.Q3_1_No) == 1 && checkquest(.Q3_1_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 80) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션12-환영 조사단 루안다 미션을";
								mes "진행하시겠어요?";
								next;
								if(isbegin_quest(.Q3_1_No) == 1 && checkquest(.Q3_2_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션12-환영 조사단 루안다 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q3_1_Exp,.Q3_1_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q3_1_NO,1;
									completequest .Q3_1_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_1_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")){
									case 1:
										if(isbegin_quest(.Q3_1_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_1_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
								}

							case 2:
								if((isbegin_quest(.Q3_2_No) == 1 && checkquest(.Q3_2_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 90) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션13-환영 조사단 트윈스 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_2_No) == 1 && checkquest(.Q3_2_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션13-환영 조사단 트윈스 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q3_2_Exp,.Q3_2_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q3_2_NO,1;
									completequest .Q3_2_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_2_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_2_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_2_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}

							case 3:
								if((isbegin_quest(.Q3_3_No) == 1 && checkquest(.Q3_3_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 100) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션14-MD 옛 글래스트헤임(상급) 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_3_No) == 1 && checkquest(.Q3_3_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션14-MD 옛 글래스트헤임(상급) 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 시간의 결정25개, 오염된 마력 5개를 드리겠습니다.";
									getexp .Q3_3_Exp,.Q3_3_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 6607,25; // 시간의 결정
									getitem 6755,5;  // 오염된 마력
									set .Q3_3_NO,1;
									completequest .Q3_3_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_3_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_3_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_3_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}

							case 4:
								if((isbegin_quest(.Q3_4_No) == 1 && checkquest(.Q3_4_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 100) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션15-환영 조사단 라비린스 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_4_No) == 1 && checkquest(.Q3_4_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션15-환영 조사단 라비린스 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q3_4_Exp,.Q3_4_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q3_4_NO,1;
									completequest .Q3_4_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_4_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_4_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_4_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 5:
								if((isbegin_quest(.Q3_5_No) == 1 && checkquest(.Q3_5_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 100) goto LevelLow;
								mes "[라임 이베노르]";
								mes "미션16-EDDA 글래스트헤임(일반) 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_5_No) == 1 && checkquest(.Q3_5_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션16-EDDA 글래스트헤임(일반) 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 저주에 침식된 원석 50개를 드리겠습니다.";
									getexp .Q3_5_Exp,.Q3_5_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25740,50; // 저주에 침식된 원석
									set .Q3_5_NO,1;
									completequest .Q3_5_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_5_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_5_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_5_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 6:
								if((isbegin_quest(.Q3_6_No) == 1 && checkquest(.Q3_6_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 120) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션17-EDDA 생체연구소(탐사모드) 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_6_No) == 1 && checkquest(.Q3_6_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션17-EDDA 생체연구소(탐사모드) 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 생체 실험 파편 30개,";
									mes "생체 연구 서류10개를 드리겠습니다.";
									getexp .Q3_6_Exp,.Q3_6_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25787,30; // 생체 실험 파편
									getitem 25786,10; // 생체 연구 서류
									set .Q3_6_NO,1;
									completequest .Q3_6_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_6_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_6_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_6_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 7:
								if((isbegin_quest(.Q3_7_No) == 1 && checkquest(.Q3_7_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 120) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션18-옛 글래스트헤임(도전) 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_7_No) == 1 && checkquest(.Q3_7_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션18-옛 글래스트헤임(도전) 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 2개, 시간의 보석 원석2개,";
									mes "시간의 마력1개를 드리겠습니다.";
									getexp .Q3_7_Exp,.Q3_7_Jexp;
									getitem 1000984,2; // 부스터 미션 티켓
									getitem 25865,2; // 시간의 보석 원석
									getitem 25866,1; // 시간의 마력
									set .Q3_7_NO,1;
									completequest .Q3_7_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_7_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_7_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_7_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 8:
								if((isbegin_quest(.Q3_8_No) == 1 && checkquest(.Q3_8_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 130) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션19-환영 조사단 언더워터 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_8_No) == 1 && checkquest(.Q3_8_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션19-환영 조사단 언더워터 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q3_8_Exp,.Q3_8_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q3_8_NO,1;
									completequest .Q3_8_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_8_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_8_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_8_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 9:
								if((isbegin_quest(.Q3_9_No) == 1 && checkquest(.Q3_9_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 130) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션20-MD 게펜 야간 투기장 3라운드 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_9_No) == 1 && checkquest(.Q3_9_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션20-MD 게펜 야간 투기장 3라운드 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 2개, 게펜 투기장 주화 10개를 드리겠습니다.";
									getexp .Q3_9_Exp,.Q3_9_Jexp;
									getitem 1000984,2; // 부스터 미션 티켓
									getitem 1000316,10; // 게펜 투기장 주화
									set .Q3_9_NO,1;
									completequest .Q3_9_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_9_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_9_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_9_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 10:
								if((isbegin_quest(.Q3_10_No) == 1 && checkquest(.Q3_10_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 150) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션21-MD 회한의 무덤 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_10_No) == 1 && checkquest(.Q3_10_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션21-MD 회한의 무덤 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 2개, 미네아스 20개를 드리겠습니다.";
									getexp .Q3_10_Exp,.Q3_10_Jexp;
									getitem 1000984,2; // 부스터 미션 티켓
									getitem 1000367,2; // 미네아스
									set .Q3_10_NO,1;
									completequest .Q3_10_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_10_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_10_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_10_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 11:
								if((isbegin_quest(.Q3_11_No) == 1 && checkquest(.Q3_11_No,HUNTING) < 2)) {
									mes "현재 수행 중인 의뢰입니다.";
									next;
									goto B_Menu3;
								}
								if(BaseLevel < 150) goto LevelLow2;
								mes "[라임 이베노르]";
								mes "미션22-MD 성좌의 탑 미션을";
								mes "진행하시겠어요?";
								next;
							
								if(isbegin_quest(.Q3_11_No) == 1 && checkquest(.Q3_11_No,HUNTING) == 2) {
									mes "[라임 이베노르]";
									mes "미션22-MD 성좌의 탑 미션을";
									mes "완료하셨군요!";
									mes "훌륭합니다. 임무 완수 보상으로";
									mes "부스터 미션 티켓 1개, 환상석2개를 드리겠습니다.";
									getexp .Q3_11_Exp,.Q3_11_Jexp;
									getitem 1000984,1; // 부스터 미션 티켓
									getitem 25271,2; // 환상석
									set .Q3_11_NO,1;
									completequest .Q3_11_No;
									next;
									goto B_Menu3;
								}
								if(isbegin_quest(.Q3_11_No) == 2) {
									mes "[라임 이베노르]";
									mes "의뢰하신 퀘스트를";
									mes "완료하셨군요!";
									mes "단, 한번만 수행가능합니다.";
									mes "다른 퀘스트를 볼까요?";
									next;
									goto B_Menu3;
								}
								switch(select("받는다:거절한다")) {
									case 1:
										if(isbegin_quest(.Q3_11_No) == 0)
											mes "[라임 이베노르]";
											mes "퀘스트 정보는 퀘스트 창을 통해 확인할";
											mes "수 있답니다.";
											mes "완료 후에는 '부스터 콜' 아이템을";
											mes "사용해 저를 소환하시면 됩니다.";
											setquest .Q3_11_No;
											next;
											goto B_Menu3;
									case 2:
										mes "[라임 이베노르]";
										mes "그럼 다른 퀘스트를 볼까요?";
										next;
										goto B_Menu3;
									}
							case 12:
								mes "[라임 이베노르]";
								mes "필요하면 언제든 불러주세요.";
								close;
							}
						case 4:
						mes "[라임 이베노르]";
						mes "다른 사냥 퀘스트는 없나요?";
						close;

					// 레벨 부족 메세지
					LevelLow:
						mes "레벨이 부족하여 해당 의뢰를 진행할";
						mes "수 없습니다.";
						next;
						goto B_Menu1;
					LevelLow1:
						mes "안타깝지만 레벨이 부족해서 이 미션을";
						mes "수행할 수 없네요.";
						mes "다른부스터 미션을 보시겠어요?";
						next;
						goto B_Menu2;
					LevelLow2:
						mes "안타깝지만 레벨이 부족해서 이 미션을";
						mes "수행할 수 없네요.";
						mes "다른부스터 미션을 보시겠어요?";
						next;
						goto B_Menu3;
					// 퀘스트 변수 설정
					//================================================
					QuestSettings:

					.Q1_1_Title$ = "Lv1-파브르를 잡아보자!";
					.Q1_1_No = 18029; //퀘스트 시작번호
					.Q1_1_Exp = 3159; //베이스 경험치
					.Q1_1_Jexp = 1299; //직업 경험치

					.Q1_2_Title$ = "Lv11-폐이욘 필드 탐험";
					.Q1_2_No = 18031; //퀘스트 시작번호
					.Q1_2_Exp = 10760;
					.Q1_2_Jexp = 7378;

					.Q1_3_Title$ = "Lv20-지하수로 탐험";
					.Q1_3_No = 18033; //퀘스트 시작번호
					.Q1_3_Exp = 39420;
					.Q1_3_Jexp = 10260;

					.Q1_4_Title$ = "Lv35-묘르닐 폐광 탐험";
					.Q1_4_No = 18035; //퀘스트 시작번호
					.Q1_4_Exp = 47980;
					.Q1_4_Jexp = 36738;

					.Q1_5_Title$ = "Lv-50이즈루드해저동굴 탐험";
					.Q1_5_No = 18037; //퀘스트 시작번호
					.Q1_5_Exp = 94380;
					.Q1_5_Jexp = 36740;

					.Q1_6_Title$ = "Lv65-폐이욘 던전 탐험";
					.Q1_6_No = 18039; //퀘스트 시작번호
					.Q1_6_Exp = 114540;
					.Q1_6_Jexp = 94760;

					.Q1_7_Title$ = "Lv80-알데바란 시계탑 탐험";
					.Q1_7_No = 18041; //퀘스트 시작번호
					.Q1_7_Exp = 165060;
					.Q1_7_Jexp = 150840;

					.Q2_1_Title$ = "미션1-EDDA 낮에 나온 반달(쉬움)";
					.Q2_1_No = 18171; //퀘스트 시작번호
					.Q2_1_Exp = 211020;
					.Q2_1_Jexp = 205320;

					.Q2_2_Title$ = "미션2-MD 게펜 마법 대회";
					.Q2_2_No = 18172; //퀘스트 시작번호
					.Q2_2_Exp = 211020;
					.Q2_2_Jexp = 205320;

					.Q2_3_Title$ = "미션3-MD 사라의 기억";
					.Q2_3_No = 18173; //퀘스트 시작번호
					.Q2_3_Exp = 211020;
					.Q2_3_Jexp = 205320;

					.Q2_4_Title$ = "미션4-환영 조사단 등록하기";
					.Q2_4_No = 18174; //퀘스트 시작번호
					.Q2_4_Exp = 211020;
					.Q2_4_Jexp = 205320;

					.Q2_5_Title$ = "미션5-환영 조사단 문라이트";
					.Q2_5_No = 18175; //퀘스트 시작번호
					.Q2_5_Exp = 211020;
					.Q2_5_Jexp = 205320;

					.Q2_6_Title$ = "미션6-환영 조사단 프로즌";
					.Q2_6_No = 18176; //퀘스트 시작번호
					.Q2_6_Exp = 211020;
					.Q2_6_Jexp = 205320;

					.Q2_7_Title$ = "미션7-MD 망령의 왕궁";
					.Q2_7_No = 18177; //퀘스트 시작번호
					.Q2_7_Exp = 211020;
					.Q2_7_Jexp = 205320;

					.Q2_8_Title$ = "미션8-MD 옛 글래스트헤임";
					.Q2_8_No = 18178; //퀘스트 시작번호
					.Q2_8_Exp = 211020;
					.Q2_8_Jexp = 205320;

					.Q2_9_Title$ = "미션9-환영 조사단 뱀파이어";
					.Q2_9_No = 18179; //퀘스트 시작번호
					.Q2_9_Exp = 211020;
					.Q2_9_Jexp = 205320;

					.Q2_10_Title$ = "미션10-환영 조사단 구양궁";
					.Q2_10_No = 18180; //퀘스트 시작번호
					.Q2_10_Exp = 211020;
					.Q2_10_Jexp = 205320;

					.Q2_11_Title$ = "미션11-환영 조사단 테디베어";
					.Q2_11_No = 18181; //퀘스트 시작번호
					.Q2_11_Exp = 211020;
					.Q2_11_Jexp = 205320;

					.Q3_1_Title$ = "미션12-환영 조사단 루안다";
					.Q3_1_No = 18182; //퀘스트 시작번호
					.Q3_1_Exp = 300000;
					.Q3_1_Jexp = 300000;

					.Q3_2_Title$ = "미션13-환영 조사단 트윈스";
					.Q3_2_No = 18183; //퀘스트 시작번호
					.Q3_2_Exp = 300000;
					.Q3_2_Jexp = 300000;

					.Q3_3_Title$ = "미션14-MD 옛 글래스트헤임(상급)";
					.Q3_3_No = 18184; //퀘스트 시작번호
					.Q3_3_Exp = 300000;
					.Q3_3_Jexp = 300000;

					.Q3_4_Title$ = "미션15-환영 조사단 라비린스";
					.Q3_4_No = 18185; //퀘스트 시작번호
					.Q3_4_Exp = 300000;
					.Q3_4_Jexp = 300000;

					.Q3_5_Title$ = "미션16-EDDA 글래스트헤임(일반)";
					.Q3_5_No = 18186; //퀘스트 시작번호
					.Q3_5_Exp = 300000;
					.Q3_5_Jexp = 300000;

					.Q3_6_Title$ = "미션17-EDDA 생체연구소(탐사모드)";
					.Q3_6_No = 18187; //퀘스트 시작번호
					.Q3_6_Exp = 300000;
					.Q3_6_Jexp = 300000;

					.Q3_7_Title$ = "미션18-옛 글래스트헤임(도전)";
					.Q3_7_No = 18188; //퀘스트 시작번호
					.Q3_7_Exp = 300000;
					.Q3_7_Jexp = 300000;

					.Q3_8_Title$ = "미션19-환영 조사단 언더워터";
					.Q3_8_No = 18189; //퀘스트 시작번호
					.Q3_8_Exp = 300000;
					.Q3_8_Jexp = 300000;

					.Q3_9_Title$ = "미션20-MD 게펜 야간 투기장 3라운드";
					.Q3_9_No = 18190; //퀘스트 시작번호
					.Q3_9_Exp = 300000;
					.Q3_9_Jexp = 300000;

					.Q3_10_Title$ = "미션21-MD 회한의 무덤";
					.Q3_10_No = 18191; //퀘스트 시작번호
					.Q3_10_Exp = 300000;
					.Q3_10_Jexp = 300000;

					.Q3_11_Title$ = "미션22-MD 성좌의 탑";
					.Q3_11_No = 18192; //퀘스트 시작번호
					.Q3_11_Exp = 300000;
					.Q3_11_Jexp = 300000;

					return;
					
					QuestWaitSet:
						//====== 첫번째 퀘스트 관련 ============

						if(isbegin_quest(.Q1_1_No) == 1) {
							set .QLv1_1$,"^A3A3A3";
							set .QLv1_1c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q1_1_No) == 2){
							set .QLv1_1$,"^A3A3A3";
							set .QLv1_1c$,"(완료)^000000";
						}
						else {
							set .QLv1_1$,"";
							set .QLv1_1c$,"";
						}
						
						if(isbegin_quest(.Q1_2_No) == 1) {
							set .QLv1_2$,"^A3A3A3";
							set .QLv1_2c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q1_2_No) == 2){
							set .QLv1_2$,"^A3A3A3";
							set .QLv1_2c$,"(완료)^000000";
						}
						else {
							set .QLv1_2$,"";
							set .QLv1_2c$,"";
						}
						if(isbegin_quest(.Q1_3_No) == 1) {
							set .QLv1_3$,"^A3A3A3";
							set .QLv1_3c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q1_3_No) == 2){
							set .QLv1_3$,"^A3A3A3";
							set .QLv1_3c$,"(완료)^000000";
						}
						else {
							set .QLv1_3$,"";
							set .QLv1_3c$,"";
						}
						if(isbegin_quest(.Q1_4_No) == 1) {
							set .QLv1_4$,"^A3A3A3";
							set .QLv1_4c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q1_4_No) == 2){
							set .QLv1_4$,"^A3A3A3";
							set .QLv1_4c$,"(완료)^000000";
						}
						else {
							set .QLv1_4$,"";
							set .QLv1_4c$,"";
						}
						if(isbegin_quest(.Q1_5_No) == 1) {
							set .QLv1_5$,"^A3A3A3";
							set .QLv1_5c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q1_5_No) == 2){
							set .QLv1_5$,"^A3A3A3";
							set .QLv1_5c$,"(완료)^000000";
						}
						else {
							set .QLv1_5$,"";
							set .QLv1_5c$,"";
						}
						if(isbegin_quest(.Q1_6_No) == 1) {
							set .QLv1_6$,"^A3A3A3";
							set .QLv1_6c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q1_6_No) == 2){
							set .QLv1_6$,"^A3A3A3";
							set .QLv1_6c$,"(완료)^000000";
						}
						else {
							set .QLv1_6$,"";
							set .QLv1_6c$,"";
						}
						if(isbegin_quest(.Q1_7_No) == 1) {
							set .QLv1_7$,"^A3A3A3";
							set .QLv1_7c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q1_7_No) == 2){
							set .QLv1_7$,"^A3A3A3";
							set .QLv1_7c$,"(완료)^000000";
						}
						else {
							set .QLv1_7$,"";
							set .QLv1_7c$,"";
						}
						if(isbegin_quest(.Q2_1_No) == 1) {
							set .QLv2_1$,"^A3A3A3";
							set .QLv2_1c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_1_No) == 2){
							set .QLv2_1$,"^A3A3A3";
							set .QLv2_1c$,"(완료)^000000";
						}
						else {
							set .QLv2_1$,"";
							set .QLv2_1c$,"";
						}
						
						if(isbegin_quest(.Q2_2_No) == 1) {
							set .QLv2_2$,"^A3A3A3";
							set .QLv2_2c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_2_No) == 2){
							set .QLv2_2$,"^A3A3A3";
							set .QLv2_2c$,"(완료)^000000";
						}
						else {
							set .QLv2_2$,"";
							set .QLv2_2c$,"";
						}
						if(isbegin_quest(.Q2_3_No) == 1) {
							set .QLv2_3$,"^A3A3A3";
							set .QLv2_3c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_3_No) == 2){
							set .QLv2_3$,"^A3A3A3";
							set .QLv2_3c$,"(완료)^000000";
						}
						else {
							set .QLv2_3$,"";
							set .QLv2_3c$,"";
						}
						if(isbegin_quest(.Q2_4_No) == 1) {
							set .QLv2_4$,"^A3A3A3";
							set .QLv2_4c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_4_No) == 2){
							set .QLv2_4$,"^A3A3A3";
							set .QLv2_4c$,"(완료)^000000";
						}
						else {
							set .QLv2_4$,"";
							set .QLv2_4c$,"";
						}
						if(isbegin_quest(.Q2_5_No) == 1) {
							set .QLv2_5$,"^A3A3A3";
							set .QLv2_5c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_5_No) == 2){
							set .QLv2_5$,"^A3A3A3";
							set .QLv2_5c$,"(완료)^000000";
						}
						else {
							set .QLv2_5$,"";
							set .QLv2_5c$,"";
						}
						if(isbegin_quest(.Q2_6_No) == 1) {
							set .QLv2_6$,"^A3A3A3";
							set .QLv2_6c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_6_No) == 2){
							set .QLv2_6$,"^A3A3A3";
							set .QLv2_6c$,"(완료)^000000";
						}
						else {
							set .QLv2_6$,"";
							set .QLv2_6c$,"";
						}
						if(isbegin_quest(.Q2_7_No) == 1) {
							set .QLv2_7$,"^A3A3A3";
							set .QLv2_7c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_7_No) == 2){
							set .QLv2_7$,"^A3A3A3";
							set .QLv2_7c$,"(완료)^000000";
						}
						else {
							set .QLv2_7$,"";
							set .QLv2_7c$,"";
						}
						if(isbegin_quest(.Q2_8_No) == 1) {
							set .QLv2_8$,"^A3A3A3";
							set .QLv2_8c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_8_No) == 2){
							set .QLv2_8$,"^A3A3A3";
							set .QLv2_8c$,"(완료)^000000";
						}
						else {
							set .QLv2_8$,"";
							set .QLv2_8c$,"";
						}
						if(isbegin_quest(.Q2_9_No) == 1) {
							set .QLv2_9$,"^A3A3A3";
							set .QLv2_9c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_9_No) == 2){
							set .QLv2_9$,"^A3A3A3";
							set .QLv2_9c$,"(완료)^000000";
						}
						else {
							set .QLv2_9$,"";
							set .QLv2_9c$,"";
						}
						if(isbegin_quest(.Q2_10_No) == 1) {
							set .QLv2_10$,"^A3A3A3";
							set .QLv2_10c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_10_No) == 2){
							set .QLv2_10$,"^A3A3A3";
							set .QLv2_10c$,"(완료)^000000";
						}
						else {
							set .QLv2_10$,"";
							set .QLv2_10c$,"";
						}
						if(isbegin_quest(.Q2_11_No) == 1) {
							set .QLv2_11$,"^A3A3A3";
							set .QLv2_11c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q2_11_No) == 2){
							set .QLv2_10$,"^A3A3A3";
							set .QLv2_10c$,"(완료)^000000";
						}
						else {
							set .QLv2_11$,"";
							set .QLv2_11c$,"";
						}
						if(isbegin_quest(.Q3_1_No) == 1) {
							set .QLv3_1$,"^A3A3A3";
							set .QLv3_1c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_1_No) == 2){
							set .QLv3_1$,"^A3A3A3";
							set .QLv3_1c$,"(완료)^000000";
						}
						else {
							set .QLv3_1$,"";
							set .QLv3_1c$,"";
						}
						
						if(isbegin_quest(.Q3_2_No) == 1) {
							set .QLv3_2$,"^A3A3A3";
							set .QLv3_2c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_2_No) == 2){
							set .QLv3_2$,"^A3A3A3";
							set .QLv3_2c$,"(완료)^000000";
						}
						else {
							set .QLv3_2$,"";
							set .QLv3_2c$,"";
						}
						if(isbegin_quest(.Q3_3_No) == 1) {
							set .QLv3_3$,"^A3A3A3";
							set .QLv3_3c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_3_No) == 2){
							set .QLv3_3$,"^A3A3A3";
							set .QLv3_3c$,"(완료)^000000";
						}
						else {
							set .QLv3_3$,"";
							set .QLv3_3c$,"";
						}
						if(isbegin_quest(.Q3_4_No) == 1) {
							set .QLv3_4$,"^A3A3A3";
							set .QLv3_4c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_4_No) == 2){
							set .QLv3_4$,"^A3A3A3";
							set .QLv3_4c$,"(완료)^000000";
						}
						else {
							set .QLv3_4$,"";
							set .QLv3_4c$,"";
						}
						if(isbegin_quest(.Q3_5_No) == 1) {
							set .QLv3_5$,"^A3A3A3";
							set .QLv3_5c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_5_No) == 2){
							set .QLv3_5$,"^A3A3A3";
							set .QLv3_5c$,"(완료)^000000";
						}
						else {
							set .QLv3_5$,"";
							set .QLv3_5c$,"";
						}
						if(isbegin_quest(.Q3_6_No) == 1) {
							set .QLv3_6$,"^A3A3A3";
							set .QLv3_6c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_6_No) == 2){
							set .QLv3_6$,"^A3A3A3";
							set .QLv3_6c$,"(완료)^000000";
						}
						else {
							set .QLv3_6$,"";
							set .QLv3_6c$,"";
						}
						if(isbegin_quest(.Q3_7_No) == 1) {
							set .QLv3_7$,"^A3A3A3";
							set .QLv3_7c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_7_No) == 2){
							set .QLv3_7$,"^A3A3A3";
							set .QLv3_7c$,"(완료)^000000";
						}
						else {
							set .QLv3_7$,"";
							set .QLv3_7c$,"";
						}
						if(isbegin_quest(.Q3_8_No) == 1) {
							set .QLv3_8$,"^A3A3A3";
							set .QLv3_8c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_8_No) == 2){
							set .QLv3_8$,"^A3A3A3";
							set .QLv3_8c$,"(완료)^000000";
						}
						else {
							set .QLv3_8$,"";
							set .QLv3_8c$,"";
						}
						if(isbegin_quest(.Q3_9_No) == 1) {
							set .QLv3_9$,"^A3A3A3";
							set .QLv3_9c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_9_No) == 2){
							set .QLv3_9$,"^A3A3A3";
							set .QLv3_9c$,"(완료)^000000";
						}
						else {
							set .QLv3_9$,"";
							set .QLv3_9c$,"";
						}
						if(isbegin_quest(.Q3_10_No) == 1) {
							set .QLv3_10$,"^A3A3A3";
							set .QLv3_10c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_10_No) == 2){
							set .QLv3_10$,"^A3A3A3";
							set .QLv3_10c$,"(완료)^000000";
						}
						else {
							set .QLv3_10$,"";
							set .QLv3_10c$,"";
						}
						if(isbegin_quest(.Q3_11_No) == 1) {
							set .QLv3_11$,"^A3A3A3";
							set .QLv3_11c$,"(수행중)^000000";
						}
						else 
							if(isbegin_quest(.Q3_11_No) == 2){
							set .QLv3_10$,"^A3A3A3";
							set .QLv3_10c$,"(완료)^000000";
						}
						else {
							set .QLv3_11$,"";
							set .QLv3_11c$,"";
						}
						return;
					}
			case 3:
				if (baselevel < 100) {
				mes "[라임 이베노르]";
				mes "부스터 웨폰과 부스터 의상 아이템을";
				mes "인챈트 할 수 있습니다.";
				mes "모험가님의 레벨이 ^0000cd레벨 100이상^000000이어야";
				mes "인챈트를 진행하실 수 있습니다.";
				mes "이용에 참고바랍니다.";
				end;
			} else {
				mes "[라임 이베노르]";
				mes "부스터 웨폰과 부스터 의상 아이템에";
				mes "인챈트로 특별한 옵션을 부여할 수";
				mes "있습니다.";
				mes "^0000cd레벨 100이상^000000이면 인챈트가 가능하며";
				mes "인챈트에는 별도의 아이템이 필요할 수";
				mes "있습니다.";
				close2;
					switch(select("부스터 웨폰 인챈트:부스터 의상 투구 인챈트:부스터 의상 걸칠것 인챈트")){
						case 1:
							mes "[라임 이베노르]";
							mes "부스터 박스에서 획득한 부스터 웨폰";
							mes "아이템을 인챈트할 수 있습니다.";
							close2;
							item_enchant 36;  // 부스터 웨폰 인챈트
							end;
						case 2:
							mes "[라임 이베노르]";
							mes "부스터 박스에서 획득한 부스터 의상";
							mes "투구 아이템을 인챈트할 수 있습니다.";
							close2;
							item_enchant 37;  // 의상 투구 인챈트
							end;
						case 3:
							mes "[라임 이베노르]";
							mes "부스터 박스에서 획득한 부스터 의상";
							mes "걸칠것을 인챈트할 수 있습니다.";
							close2;
							item_enchant 38;  // 의상 걸칠것 인챈트
							end;
						}
				}
			case 4:
				mes "[라임 이베노르]";
				mes "사용할 레벨업 티켓을 선택하세요:";
				next;
				switch(select("레벨업 티켓(80~89):레벨업 티켓(90~98):레벨업 티켓(150~169):레벨업 티켓(170~189):레벨업 티켓(230~239)")){
					case 1:
						if (baselevel >= 80 && baselevel <= 89) {
							if (countitem(1000989) > 0) {
								delitem 1000989, 1;
								set BaseLevel, BaseLevel + 1;
								mes "레벨이 1 올랐습니다. 현재 레벨: " + Baselevel;
							} else {
								mes "레벨업 티켓(80~89)이 부족합니다.";
							}
						} else {
							mes "이 티켓을 사용할 레벨 범위에 속하지 않습니다.";
						}
						close;
					case 2:
						if (baselevel >= 90 && baselevel <= 98) {
							if (countitem(1000990) > 0) {
								delitem 1000990, 1;
								set BaseLevel, BaseLevel + 1;
								mes "레벨이 1 올랐습니다. 현재 레벨: " + Baselevel;
							} else {
								mes "레벨업 티켓(90~98)이 부족합니다.";
							}
						} else {
							mes "이 티켓을 사용할 레벨 범위에 속하지 않습니다.";
						}
						close;
					case 3:
						if (baselevel >= 150 && baselevel <= 169) {
							if (countitem(1000991) > 0) {
								delitem 1000991, 1;
								set BaseLevel, BaseLevel + 1;
								mes "레벨이 1 올랐습니다. 현재 레벨: " + Baselevel;
							} else {
								mes "레벨업 티켓(150~169)이 부족합니다.";
							}
						} else {
							mes "이 티켓을 사용할 레벨 범위에 속하지 않습니다.";
						}
						close;
					case 4:
						if (baselevel >= 170 && baselevel <= 189) {
							if (countitem(1000992) > 0) {
								delitem 1000992, 1;
								set BaseLevel, BaseLevel + 1;
								mes "레벨이 1 올랐습니다. 현재 레벨: " + Baselevel;
							} else {
								mes "레벨업 티켓(170~189)이 부족합니다.";
							}
						} else {
							mes "이 티켓을 사용할 레벨 범위에 속하지 않습니다.";
						}
						close;
					case 5:
						if (Baselevel >= 230 && baselevel <= 239) {
							if (countitem(1000993) > 0) {
								delitem 1000993, 1;
								set BaseLevel, BaseLevel + 1;
								mes "레벨이 1 올랐습니다. 현재 레벨: " + Baselevel;
							} else {
								mes "레벨업 티켓(230~239)이 부족합니다.";
							}
						} else {
							mes "이 티켓을 사용할 레벨 범위에 속하지 않습니다.";
						}
						close;
				
					default:
						mes "취소하였습니다.";
						close;
					}
			case 5:
				mes "[라임 이베노르]";
				mes "무엇을 도와드릴까요?";
				mes "제가 답변 가능한 거라면";
				mes "알려드리겠습니다.";
				next;
				switch(select("기초 정보 가이드:지역 이동 방법:프론테라 편의센터로 이동")) {
					case 1:
						mes "[라임 이베노르]";
						mes "기본적인 정보는 팁박스를 활용해";
						mes "보세요.";
						mes "파티맺기, 길드 설림등 기본적인";
						mes "내용을 언제든 보실 수 있습니다.";
						next;
						mes "[라임 이베노르]";
						mes "메뉴에서 팁 박스 아이콘을 클릭하거나,";
						mes "단축기 Alt + D 를 이용해 불러낼 수";
						mes "있습니다.";
						mes "지금 불러낼테니 한번 보시겠어요?";
						next;
						opentips( 1000 );
						next;
						mes "[라임 이베노르]";
						mes "찾고자 하는 항목을 검색해 보세요";
						next;
						switch(select("더좋은 장비를 갖고싶어.:프로모션 의상에 대해서:인챈트와 카드조합:사냥터 검색")){;
							case 1:
								mes "[라임 이베노르]";
								mes "프로모션으로 지급되는 장비로";
								mes "한계를 느끼나요?";
								mes "^9933FF에피소드를 진행하고 획득할 수 있는";
								mes "장비^000000들이 있답니다.";
								next;
								mes "[라임 이베노르]";
								mes "에피소드를 진행할수 있는 레벨이라면";
								mes "에피소드를 진행하고 장비 아이템을";
								mes "획득해 보세요.";
								next;
								opentips( 4107 );
								close;
							case 2:
								mes "[라임 이베노르]";
								mes "프로모션으로 지급되는 장비로";
								mes "특별한 인챈트를 통해 부가 능력를";
								mes "부여할 수 있습니다.";
								next;
								mes "[라임 이베노르]";
								mes "부스터 의상의 인챈트가 필요하시다면,";
								mes "제가 지원을 해드리고 있으니 언제든";
								mes "요청을 해주세요.";
								close;
							case 3:
								mes "[라임 이베노르]";
								mes "몬스터를 처치하면 간단히 '카드'를";
								mes "획특할 수 있습니다.";
								mes "이 '키드'는 소켓이 있는 장비 아이템에";
								mes "장착해 능력치를 더할수 도 있죠.";
								next;
								opentips( 92 );
								mes "[라임 이베노르]";
								mes "카드는 각각의 능력치가 다르니 자신이,";
								mes "원하는 능력치를 가진 카드가 있다면";
								mes "무기나 방어구에 장착해 사용해 보도록.";
								mes "하세요.";
								next;
								mes "[라임 이베노르]";
								mes "창작된 카드는 특별한 과정을 거쳐,";
								mes "'분리'할 수도 있습니다.";
								mes "사용하던 카드의 성능을 다른 장비로";
								mes "옮기고 싶다면 카드 분리를 해보는";
								mes "것도 좋겠죠?";
								next;
								mes "[라임 이베노르]";
								mes "카드가 아니라 '인챈트'를 통해서도";
								mes "장비에 특정 능력치를 부여할 수.";
								mes "있습니다.";
								mes "이번 프로모션에서도 특별한 전용";
								mes "인챈트'를 제공하고 있답니다.";
								next;
								mes "[라임 이베노르]";
								mes "에피소드 17.1을 완료하셨다면,^FF66FF부스터";
								mes "일루시온 인챈트^000000를 할 수 있어요.";
								mes "^4d4dff<NAVI>[RS26-1]<INFO>sp_cor,106,136</INFO></NAVI>^000000을 통해서 일루시온(귀속)";
								mes "장비들의 인챈트가 가능하니 한번";
								mes "가보시기 바랍니다.";
								close;
							case 4:
								mes "[라임 이베노르]";
								mes "특정 몬스터가 어디에 니오는지 찾고";
								mes "싶을때는 ^9933FF월드보기(Ctl + ')^000000이나";
								mes "^9933FF내비게이션^000000을 이용하면 됩니다.";
								next;
								opentips( 902 );
								mes "[라임 이베노르]";
								mes "월드맵의 검색을 이용해 원하는";
								mes "몬스터의 이름을 검색하면 해당";
								mes "몬스터가 존재하는 필드로 내비게이션";
								mes "안내가 뜨니까 이용해보세요";
								close;
							}
					case 2:
						mes "[라임 이베노르]";
						mes "지역을 이동하는 방법은 기본적으로";
						mes "직접 걸어서 이동하는 방법이 있습니다.";
						mes "두번째는 각 도시마다 존재하는";
						mes "카프라나 존다의 이동 서비스를";
						mes "이용하는 것이죠.";
						next;
						opentips( 901 );
						mes "[라임 이베노르]";
						mes "^9933FF월드보기(Ctl + ')^000000로 월드맵을 연 다음";
						mes "원하는 지역을 선택한 뒤";
						mes "^9933FF월드이용 이동권^000000이나 특정 재화를";
						mes "사용해 이동하는 방법도 있죠.";
						mes "이용하는 것이죠.";
						next;
						mes "[라임 이베노르]";
						mes "월드맵에서 도시를 선택하면 해당";
						mes "도시의 카프라나 존다가 어느 지역으로";
						mes "이동 서비스를 해주는지 한 눈에 알 수";
						mes "있답니다.";
						mes "월드맵은 많은 정보를 가지고 있으니";
						mes "틈틈히 보세요.";
						next;
						mes "[라임 이베노르]";
						mes "월드맵의 검색을 이용해 원하는";
						mes "몬스터의 위치를 찾을 수도 있습니다.";
						mes "내비게이션과 연동이 되니 목표 대상을";
						mes "찾을때도 수월하겠죠?";
						close;
					case 3:
						mes "[라임 이베노르]";
						mes "프론테라의 모험가 편의센터로";
						mes "보내드릴까요?";
						switch(select("지금 이동:나중에 이동")) {
							case 1:
								mes "[라임 이베노르]";
								mes "알겠습니다.";
								warp("prt_in",45,105);
								end;
							case 2:
								mes "[라임 이베노르]";
								mes "그럼 나중에 다시 불러주세요.";
								close;
						}
						close;
				}
			case 6:
				if (countitem(101473) > 0) {
					mes "이미 프리미엄 부스터 콜을 사용하고";
					mes "계시네요!";
					break;
				}
				else 
					mes "[라임 이베노르]";
					mes "냥다래 열매 150개를 사용하여";
					mes "부스터 콜을 프리미엄 등급으로 업그레이드합니다.";
					next;
				if (countitem(6909) >= 150) {
					if (countitem(101473) == 0) {
						delitem 6909, 150;   // 냥다래 열매 150개를 제거
						delitem 100337, 1;   // 부스트 콜 삭제
						getitem 101473, 1;   // 프리미엄 부스터 콜 아이템을 추가
						getitem 101589, 1;  // [비매품]탑승용 고삐 상자
						getitem 1000995, 1;  // 부스터 의상 프리미엄 인챈트권
						getitem 1000967, 5;  // 스테이터스 초기화 티켓
						getitem 1000983, 5;  // 스킬 초기화 티켓

						mes "부스터 콜이 프리미엄으로 업그레이드되었습니다.";
						mes "프리미엄 부스터 콜 아이템을 획득하였습니다.";
					} else {
						mes "부스터 콜 업그레이드에 필요한 아이템이 부족합니다.";
						}
					close;
				}
	}

OnInit:
		setunitdata (getnpcid(0), UNPC_GROUP_ID,0);
		setunittitle(getnpcid(0), "<메가 부스터 콜>");
		end;
}

prt_in,37,95,6	script	초기화 서비스	4_F_GENETIC,{
	if(countitem(100337)) || (countitem(101473)){
		mes "[초기화 서비스]";
		mes "안녕하세요, 모험가님.";
		mes "능력치 초기화가 필요하신가요?";
		mes "초기화 티켓만 있다면 얼마든지 이용";
		mes "가능하십니다.";
		next;
		mes "[초기화 서비스]";
		mes "안정적인 초기화 진행을 위해서는";
		mes "^0000cd소지품 무게 1500 이하,탈 것, 팔콘,";
		mes "카트가 없어야 합니다.^000000";
		mes "준비 되셨습니까?";
		next;
		switch(select("스테이터스 초기화:스킬 초기화:정리를 하고 오겠다.")) {
			case 1:
				if(countitem(1000967) > 0 ){
					mes "[초기화 서비스]";
					mes "그럼 모험가님의 능력치를";
					mes "초기화할게요.";
					mes "얍!";
					specialeffect2 EF_CURE;
					ResetStatus;
					delitem 1000967, 1;
					next;
					mes "[초기화 서비스]";
					mes "스테이터스 초기화가 잘 되었습니다.";
					close;
				}else	{
					mes "[초기화 서비스]";
					mes "<ITEM>[스테이터스 초기화 티켓]<INFO>1000967</INFO></ITEM>이이 없네요.";
					mes "다음에 다시 이용해주세요";
					Close;
				}
			case 2:
				if(countitem(1000983) > 0 ){
				mes "[초기화 서비스]";
				mes "그럼 모험가님의 스킬을 초기화 할게요.";
				mes "얍!";
				specialeffect2 EF_CURE;
				sc_end_class;
				ResetSkill;
				delitem 1000983, 1;
				next;
				mes "[초기화 서비스]";
				mes "스킬 초기화가 잘 되었습니다.";
				close;
				}else	{
					mes "[초기화 서비스]";
					mes "<ITEM>[스킬 초기화 티켓]<INFO>1000983</INFO></ITEM>이이 없네요.";
					mes "다음에 다시 이용해주세요";
					Close;
				}

			case 3:
				mes "[초기화 서비스]";
				mes "소지무게, 탈것, 소환수, 카트 등을";
				mes "정리하고 이용해 주세요.";
				close;
			}

	} else {
		mes "[초기화 서비스]";
		mes "안녕하세요, 모험가님.";
		mes "메가 부스터를 이용하시는 모험가님께";
		mes "초기화 서비스를 해드리고 있습니다.";
		mes "아쉽게도 모험가님께서는 메가 부스터";
		mes "이용자가 아니시군요.";
		end;
	}
OnInit:
        setunitdata (getnpcid(0), UNPC_GROUP_ID,0);
		setunittitle(getnpcid(0), "<메가 부스터 콜>");
		end;
}
prt_in,40,95,4	script	부스터 교환원	4_M_MERCAT1,{
	if(countitem(100337)) || (countitem(101473)){	
		mes "[부스터 교환원]";
		mes "안녕하세요!";
		mes "모험가님을 위해 멋진 장비들을";
		mes "준비했습니다.";
		mes "천천히 구경해보시죠!!";
		next;
		mes "[부스터 교환원]";
		mes "어떤 것을 보여드릴까요";
		next;
		switch(select("부스터 무기:쉐도우 장비:일루시온 귀속 장비:오토매틱 귀속장비:취소")) {
			case 1:
				mes "[부스터 교환원]";
				mes "^0000cd부스터 무기^000000를 보여드릴까요??";
				mes "교환에는^0000cd<ITEM>[부스터 웨폰 교환권]<INFO>1000253</INFO></ITEM>^000000이";
				mes "필요합니다.??";
				next;
				mes "[부스터 교환원]";
				mes "어떤 직업 계열의 무기를 원하시는지";
				mes "말씀해주시겠어요??";
				next;
				switch(select("검사 계열:상인 계열:도둑 계열:마법사 계열:복사 계열:궁수 계열:권성/소울링커 계열:노비스/거너 계열:취소")){
					case 1:
						mes "[부스터 교환원]";
						mes "검사 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega04";
						end;
					case 2:
						mes "[부스터 교환원]";
						mes "상인 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega05";
						end;
					case 3:
						mes "[부스터 교환원]";
						mes "도둑 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega06";
						end;
					case 4:
						mes "[부스터 교환원]";
						mes "마법사 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega07";
						end;
					case 5:
						mes "[부스터 교환원]";
						mes "복사 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega08";
						end;
					case 6:
						mes "[부스터 교환원]";
						mes "궁수 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega09";
						end;
					case 7:
						mes "[부스터 교환원]";
						mes "권성/소울링커 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega10";
						end;
					case 8:
						mes "[부스터 교환원]";
						mes "소환사/닌자 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega11";
						end;
					case 9:
						mes "[부스터 교환원]";
						mes "노비스/거너 계열의 장비는 여기 있습니다.";
						mes "천천히 구경해주세요!!";
						close2;
						callshop "mega12";
						end;
					case 10:
						mes "[부스터 교환원]";
						mes "또 들러주세요~!!";
						close;
					}
			case 2:
				mes "[부스터 교환원]";
				mes "^0000cd쉐도우 장비^000000를 보여드릴까요??";
				mes "교환에는^0000cd<ITEM>[부스터 코인]<INFO>1000254</INFO></ITEM>^000000이 필요합니다.";
				close2;
				callshop "mega13";
				end;
			case 3:
				mes "[부스터 교환원]";
				mes "귀속 일루시온 장비들은 에피소드 17.1";
				mes "메인 퀘스트를 완료하신 분들만";
				mes "교환하실 수 있습니다.";
				mes "에피소드 완료 확인은 부스터 콜로";
				mes "해주세요.";
				mes "보너스 경험치를 받을 수 있습니다.";
				close2;
				callshop "mega14";
				end;
			case 4:
				if(countitem(101473) == 1){
					mes "[부스터 교환원]";
					mes "오토매틱 귀속 장비를 보여드를까요?";
					next;
					mes "[부스터 교환원]";
					mes "해당 장비들은  에피소드 17.2에";
					mes "등장하는 오토매틱 장비들의 성능과";
					mes "동일합니다.";
					next;
					mes "[부스터 교환원]";
					mes "오토매틱 장비들은 다양한 조합으로";
					mes "사용하고 싶으시다면 에피소드에서";
					mes "직접 제공되는 장비들로 교체하시면";
					mes "좋을 것 같아요";
					next;
					mes "[부스터 교환원]";
					mes "에픽소드에서 제공되는 장비는";
					mes "^0000cd[오토매틱]^000000 내용을 참고해 주세요";
					next;
					mes "[부스터 교환원]";
					mes "자, 그럼 교환하시겠습니까? 교환에는";
					mes "<ITEM>[오토매틱 장비 교환권]<INFO>1000985</INFO></ITEM>이 필요합니다.";
					close2;
					callshop "mega15";
					end;
				} else {
					mes "[부스터 교환원]";
					mes "오토매틱 귀속 장비는";
					mes "^0000cd프리미엄 부스터 콜^000000";
					mes "사용자 한정으로 교환을 해드리고";
					mes "있습니다.";
					mes "부스터 콜을 업그레이드하시면";
					mes "프리미엄 부스터 콜을 사용하실 수";
					mes "있답니다.";
					close;
				}
			
			case 5:
				mes "[부스터 교환원]";
				mes "또 들러주세요~!!";
				close;
			
		}
	} else {
		mes "[부스터 교환원]";
		mes "안녕하세요.";
		mes "부스터 콜 또는 프리미엄 부스터 콜을";
		mes "지닌 모험가분들에게 여러가지 상품을";
		mes "소개하고 있습니다.";
		mes "부스터 콜 이용자라면 누구나";
		mes "가능하지만, 모험가님은 부스터 콜";
		mes "사용자가 아니시네요";
		mes "주변에 계시다면 알려주세요~!";
		close;
	}
	
OnInit:
        setunitdata (getnpcid(0), UNPC_GROUP_ID,0);
		setunittitle(getnpcid(0), "<메가 부스터 콜>");
		end;
}

prt_in,34,95,4	script	메가 부스터 전직요원	4_M_COSTELL,{
	mes .NPCName$;
	mes "부스터 콜이나 프리미엄 부스터 콜을";
	mes "가지고 계시다면 전직에 관련된";
	mes "사항들을 정성껏 도와드립니다.";
	next;
		if(countitem(100337)) || (countitem(101473)){
		switch(select("전직시켜 주세요.:전직 조건이 뭔가요?")){
			case 1:
				mes .NPCName$;
				mes "알겠습니다. 그럼, 전직을 도와드리기";
				mes "전에 몇가지 필요한 사항을";
				mes "확인하겠습니다.";
				next;

				function Get_Job_Equip;
				// 플레이어가 필요한 레벨을 가지고 있는지 확인합니다.
				// 없으면 닫고, 있으면 반환
				function Require_Level {
					if((class == 4002 || class == 4003 || class == 4004 || class == 4005 || class == 4006 || class == 4007)){
						mes "오...그리고 보니 전승후2차 전직을";
						mes "해야 할 때군요? 제가 전직을";
						mes "도와드리지는 않지만 전직 조건은";
						mes "체크해드릴 수 있지요.";
						mes "레벨이 부족하다면 올려드리기도";
						mes "합니다.";
						next;
						if(BaseLevel < 65){
							mes .NPCName$;
							mes "어디 보자... 2차 전직 조건에 베이스";
							mes "레벨 제한은 없지만 그래도 왠지 조금";
							mes "아쉽군요. 그럼 힘을 좀 발휘해볼가요.";
							next;
							mes .NPCName$;
							set baselevel,65;
							mes "^0000cd베이스 레벨을 65^000000까지 올려드렸습니다.";
							close;
							}
						if(JobLevel < 50){
							mes .NPCName$;
							mes "어디 보자... 직업 레벨이 좀";
							mes "모자라는군요. 그럼 힘을 좀";
							mes "발휘해볼가요.";
							next;
							mes .NPCName$;
							set JobLevel,50;
							mes "^0000cd지업 레벨을 50^000000까지 올려드렸습니다.";
							mes "스킬포인트가 남지 않도록 스킬을";
							mes "모두 올리는 것 잊지 마십시오!";
							close;
							}
					} else 
						if((class == 4008 || class == 4009 || class == 4010 || class == 4011 || class == 4012 || class == 4013 || class == 4014 || class == 4015 || class == 4016 || class == 4017 || class == 4018 || class == 4019 || class == 4020 || class == 4021)){
							mes "오...그리고 보니 전승후2차 전직을";
							mes "해야 할 때군요? 제가 전직을";
							mes "도와드리지는 않지만 전직 조건은";
							mes "체크해드릴 수 있지요.";
							mes "레벨이 부족하다면 올려드리기도";
							mes "합니다.";
							next;
						if(BaseLevel < 99){
							mes .NPCName$;
							mes "어디 보자... 2차 전직 조건에 베이스";
							mes "레벨 제한은 없지만 그래도 왠지 조금";
							mes "아쉽군요. 그럼 힘을 좀 발휘해볼가요.";
							next;
							mes .NPCName$;
							set baselevel,99;
							mes "^0000cd베이스 레벨을 99^000000까지 올려드렸습니다.";
							close;
							}
						if(JobLevel < 70){
							mes .NPCName$;
							mes "어디 보자... 직업 레벨이 좀";
							mes "모자라는군요. 그럼 힘을 좀";
							mes "발휘해볼가요.";
							next;
							mes .NPCName$;
							set JobLevel,70;
							mes "^0000cd지업 레벨을 70^000000까지 올려드렸습니다.";
							mes "스킬포인트가 남지 않도록 스킬을";
							mes "모두 올리는 것 잊지 마십시오!";
							close;
							}
					} else {
						if (BaseLevel < getarg(0) || JobLevel < getarg(1)) {
							.@blvl = getarg(0) - BaseLevel;
							.@jlvl = getarg(1) - JobLevel;
							mes "레벨 요구 사항:";
							mes ((getarg(0) > 1) ?
								"전직을 하기시엔^bb0000" + getarg(0) + "^000000 (^bb0000기본^000000) / " : "") + "^00bb00" +
								getarg(1) + "^000000 (^00bb00직업^000000)" + "이 필요합니다.";
							mes "계속하려면 " +
								((.@blvl > 0) ? "^bb0000" + .@blvl + "^000000 기본 레벨" + 
									((.@jlvl > 0) ? "그리고 " : "") : "") +
								((.@jlvl > 0) ? "^00bb00" + .@jlvl + "^000000 직업 레벨" : "") +
								"을 조금 더 올리고  다시오십시오.";
							close;
							}
						return;
						}
					}
				
				// 주어진 eac가 baby 클래스인지 확인합니다.
				function Is_Baby	{
					return ((getarg(0, eaclass())&EAJL_BABY)>0);
				}

				// 플레이어가 4번째 클래스로 변경할 수 있는지 확인합니다.
				// 참고: 여기에는 레벨 확인이 포함되지 않습니다.
				function	Can_Change_Fourth	{
					// 네 번째 클래스로 변경하려면 다음 조건을 충족해야 합니다.
				// * 초월 3등급
					if( !.FourthClass )
						return false; // Fourth job change disabled
					if( (eaclass()&(EAJL_THIRD|EAJL_UPPER)) != (EAJL_THIRD|EAJL_UPPER) )
						return false; // Not Transcendent Third Class
					if( eaclass()&EAJL_FOURTH )
						return false; // Already Fourth Class
					if( roclass(eaclass()|EAJL_FOURTH) < 0 )
						return false; // Job has no Fourth Class
					return true;
				}

				// 플레이어가 3차 클래스로 변경할 수 있는지 확인합니다.
				// 참고: 여기에는 레벨 확인이 포함되지 않습니다.
				function	Can_Change_Third	{
					// 3등석으로 변경하려면 다음 중 하나에 해당해야 합니다.
					// * Second Class
					// * Transcendent Second Class
					// * Baby Second Class
					if( !.ThirdClass )
						return false; // 세 번째 전직 불가
					if( !(eaclass()&EAJL_2) )
						return false; // 2급 아님
					if( eaclass()&EAJL_THIRD )
						return false; // 이미 3학년
					if( roclass(eaclass()|EAJL_THIRD) < 0 )
						return false; // 욥에게는 세 번째 클래스가 없습니다.
					if( (eaclass()&EAJ_UPPERMASK) == EAJ_SUPER_NOVICE )
						return false; // 특급. Super Novice는 3rd Cl과 동일하지만 고유한 경우가 있습니다.
					if( Is_Baby() && (!.BabyClass || !.BabyThird) )
						return false; // 아기(세 번째) 변경 불가
					return true;
				}

				function	Can_Rebirth	{
				// 다시 태어나려면 다음과 같아야 합니다.
				// * 두 번째 클래스
					if( !.RebirthClass )
						return false; // 환생 비활성화됨
					if( !(eaclass()&EAJL_2) )
						return false; // 2급 아님
					if( eaclass()&(EAJL_UPPER|EAJL_THIRD) )
						return false; // 이미 환생/3등
					if( roclass(eaclass()|EAJL_UPPER) < 0 )
						return false; // 직업에는 초월 클래스가 없습니다
					if( Is_Baby() && !.BabyClass )
						return false; // 아기 변화는 허용되지 않습니다
					return true;
				}

				// 주어진 eac가 첫 번째 클래스인지 확인합니다.
				function	Is_First_Cls	{
					return (getarg(0) <= EAJ_TAEKWON);
				}

				function	Check_Riding	{
					// 참고: 항상 Riding을 확인해야 하는 이유:
					// 마운트는 다른 클래스로 간주됩니다.
					// 처리하기 위해 이 NPC를 더 크게 만듭니다.
					// 특별한 경우입니다.
					if (checkfalcon() || checkcart() || checkriding() || ismounting()) {
						mes "계속 진행하기 전에 " +
							((checkfalcon()) ? "매" : "") +
							((checkcart()) ? "카트" : "") +
							((checkriding()) ? "페코" : "") +
							((ismounting()) ? "탈것" : "") +
							"를 제거해주세요.";
						close;
					}
					return;
				}
				function	Check_SkillPoints	{
					if (.SkillPointCheck && SkillPoint) {
						mes "계속 진행하기 전에 모든 스킬 포인트를 사용해주세요.";
						close;
					}
					return;
				}

				// addJobOptions는 본질적으로 다음과 같습니다.
				// setarray .@array[getarraysize(.@array)],opt1,opt2,...;
				// 매우 자주 사용하기 때문에 읽기가 더 쉽습니다.
				function	Job_Options	{
					.@argcount = getargcount();
					.@arr_size = getarraysize(getarg(0));
					for( .@i = 1; .@i < .@argcount; .@i++) {
						setarray getelementofarray(getarg(0), .@arr_size++),getarg(.@i);
					}
				}

				// NPC 시작
					mes .NPCName$;
					Check_Riding();
					Check_SkillPoints();
				// initialisation
					.@eac = eaclass();
					.@fourth_possible = Can_Change_Fourth();
					.@third_possible = Can_Change_Third();
					.@rebirth_possible = Can_Rebirth();
					.@first_eac = .@eac&EAJ_BASEMASK;
					.@second_eac = .@eac&EAJ_UPPERMASK;
					// 참고: 이는 이미 pc.cpp에 설정되어 있습니다.
					// 베이스클래스 = roclass(.@eac
					// BaseJob = roclass(.@eac
					//dispbottom "디버그: eac(" .@eac "), third(" .@third_possible "), rebirth(" .@rebirth_possible "), BaseClass(" BaseClass "), BaseJob(" BaseJob ")";
						
					// 여기서부터 jobmaster는 현재 클래스를 확인합니다.
					// `.@job_opt` 배열을 가능한 값으로 채웁니다.
					// 플레이어의 작업 옵션입니다.
					
					if( .@rebirth_possible ) {
						// Rebirth option (displayed on the top of the menu)
						Require_Level(.Req_Rebirth[0], .Req_Rebirth[1]);
						Job_Options(.@job_opt, Job_Novice_High);
					}
					if( .@third_possible ) {
						// Third Job change (displayed below rebirth)
						Require_Level(.Req_Third[0], .Req_Third[1]);
						Job_Options(.@job_opt, roclass(.@eac|EAJL_THIRD));
					}
					if( .@fourth_possible ) {
						// Fourth Job change (displayed below rebirth)
						Require_Level(.Req_Fourth[0], .Req_Fourth[1]);
						Job_Options(.@job_opt, roclass(.@eac|EAJL_FOURTH));
					}
					
					if (.SecondExpanded && 
					(.@eac&EAJ_UPPERMASK) == EAJ_SUPER_NOVICE && // is Super Novice
					!(eaclass()&EAJL_THIRD) ) {				 	// not already Expanded SN
						// (Baby) Super Novice to Expanded (Baby) Super Novice
						if( !Is_Baby(.@eac) || (.BabyClass && .BabyExpanded) ) {
							// .BabyClass & .BabyExpanded must be enabled if the is a baby
							Require_Level(.Req_Exp_SNOVI[0], .Req_Exp_SNOVI[1]);
							Job_Options(.@job_opt,roclass(.@eac|EAJL_THIRD)); // Expanded SN is "third" cls
						}
					}
					
						// babies don't get to become 4th jobs
						if (.FourthExpanded && .@eac == EAJ_REBELLION) {
							Require_Level(.Req_Fourth[0], .Req_Fourth[1]);
							Job_Options(.@job_opt, roclass(EAJ_NIGHT_WATCH));
						}

						if (.FourthExpanded && .@eac == EAJ_KAGEROUOBORO) {
							Require_Level(.Req_Fourth[0], .Req_Fourth[1]);
							Job_Options(.@job_opt, roclass(EAJ_SHINKIRO_SHIRANUI));
						}

						if (.FourthExpanded && .@eac == EAJ_SOUL_REAPER) {
							Require_Level(.Req_SHandler[0], .Req_SHandler[1]);
							Job_Options(.@job_opt, roclass(EAJ_SOUL_ASCETIC));
						}
						
						if (.FourthExpanded && .@eac == EAJ_STAR_EMPEROR) {
							Require_Level(.Req_SHandler[0], .Req_SHandler[1]);
							Job_Options(.@job_opt, roclass(EAJ_SKY_EMPEROR));
						}
						
						if (.FourthExpanded && .@eac == EAJ_SUPER_NOVICE_E) {
							Require_Level(.Req_Fourth[0], .Req_Fourth[1]);
							Job_Options(.@job_opt, roclass(EAJ_HYPER_NOVICE));
						}
	
						if (.FourthExpanded && .@eac == EAJ_SUMMONER) {
							Require_Level(.Req_SHandler[0], .Req_SHandler[1]);
							Job_Options(.@job_opt, roclass(EAJ_SPIRIT_HANDLER));
						}
						
					if (.SecondExpanded && 
						((.@eac&(~EAJL_BABY)) == EAJ_NINJA || 		// is (Baby) Ninja
						(.@eac&(~EAJL_BABY)) == EAJ_GUNSLINGER)) {	// is (Baby) Gunslinger
						// (Baby) Ninja to (Baby) Kagerou / Oboro
						// (Baby) Gunslinger to (Baby) Rebellion
						if( !Is_Baby(.@eac) || (.BabyClass && .BabyExpanded) ) {
							// .BabyClass & .BabyExpanded must be enabled if the is a baby
							Require_Level(.Req_Exp_NJ_GS[0], .Req_Exp_NJ_GS[1]);
							// Kagerou, Oboro, Rebellion are considered as a 2-1 class
							Job_Options(.@job_opt, roclass(.@eac|EAJL_2_1));
						}
					}
					
					// 플레이어는 Job_Novice, Job_Novice_High 또는 Job_Baby입니다.
					if (.@first_eac == EAJ_NOVICE && .@second_eac != EAJ_SUPER_NOVICE) {
						// MAPID_NOVICE, MAPID_SUPER_NOVICE, MAPID_NOVICE_HIGH, MAPID_BABY
						Require_Level(.Req_First[0], .Req_First[1]);
						switch(Class) {
							case Job_Novice:
								// First job change
								Job_Options(.@job_opt,Job_Swordman,
									Job_Mage, Job_Archer, Job_Acolyte, Job_Merchant, Job_Thief,
									Job_Super_Novice, Job_Taekwon, Job_Gunslinger, Job_Ninja);
								if( .BabyNovice )
									Job_Options(.@job_opt, Job_Baby);
								break;
							case Job_Novice_High:
								// Job change after rebirth
								if( .LastJob && lastJob )
									Job_Options(.@job_opt,
										roclass((eaclass(lastJob)&EAJ_BASEMASK)|EAJL_UPPER));
								else
									Job_Options(.@job_opt, 
										Job_Swordman_High, Job_Mage_High, Job_Archer_High,
										Job_Acolyte_High, Job_Merchant_High, Job_Thief_High);
								break;
							case Job_Baby:
								if( !.BabyClass )
									break;
								// First job change as a baby
								Job_Options(.@job_opt, Job_Baby_Swordman, Job_Baby_Mage,
									Job_Baby_Archer,Job_Baby_Acolyte, Job_Baby_Merchant,
									Job_Baby_Thief);
								if( .BabyExpanded )
									Job_Options(.@job_opt, Job_Super_Baby, Job_Baby_Taekwon,
										Job_Baby_Gunslinger, Job_Baby_Ninja);
								if( .BabySummoner )
									Job_Options(.@job_opt, Job_Baby_Summoner);
								break;
							default:
								mes "오류가 발생했습니다.";
								close;
						}
					} else if( Is_First_Cls(.@eac) || 				// First Class
							Is_First_Cls(.@eac&(~EAJL_UPPER)) ||	// Trans. First Cls
							(.BabyClass && Is_First_Cls(.@eac&(~EAJL_BABY))) ) {	// Baby First Cls
						//플레이어는 일류입니다(초보 아님).
						// 대부분의 작업에는 여기에 두 가지 옵션(2-1 및 2-2)이 있어야 합니다.
						.@class1 = roclass(.@eac|EAJL_2_1); // 2-1
						.@class2 = roclass(.@eac|EAJL_2_2); // 2-2
						// dispbottom "Debug: Classes: class1 ("+.@class1+"), class2 ("+.@class2+")";
						if(.LastJob && lastJob && (.@eac&EAJL_UPPER)) {
							// Player is rebirth Cls and linear class changes are enforced
							Require_Level(.Req_Second[0], .Req_Second[1]);
							Job_Options(.@job_opt, lastJob + Job_Novice_High);
						} else {
							// Class is not enforced, player can decide.
							if( .@class1 > 0 ) { // 2-1
								Require_Level(.Req_Second[0], .Req_Second[1]);
								Job_Options(.@job_opt, .@class1);
							}
							if( .@class2 > 0 ) { // 2-2
								Require_Level(.Req_Second[0], .Req_Second[1]);
								Job_Options(.@job_opt, .@class2);
							}
						}
					}
					
					// .@job_opt에 의해 정의된 작업 메뉴를 표시합니다.
					// .@job_opt는 이 줄 아래에서 변경하면 안 됩니다.
					function Job_Menu;
					Job_Menu(.@job_opt);
					close;

					// 작업 메뉴를 표시합니다.
					function	Job_Menu	{
						// getarg(0)은 사용 가능한 모든 작업 변경 사항을 포함하는 .@job_opt 배열입니다.
						function Confirm_Change;
						while(true) {
							.@opt_cnt =  getarraysize(getarg(0));
							if( .@opt_cnt <= 0 ) {
								mes "더 이상의 직업이 없습니다.";
								close;
							}

						.@selected = 0; // 단일 직업 클래스만 제공되며 선택이 필요하지 않습니다.
						if (.@opt_cnt > 1) {
							// 여러 직업 클래스가 제공됩니다. 하나를 선택하여 .@class에 저장하세요.
							// 그 후 .@class를 확인합니다.
							mes "좋습니다. 모든 조건이 완벽합니다.";
							mes "지금 바로 전직을 도와드릴 수";
							mes "있는데요. 전직 하시겠습니까?";
							next;
							.@menu$ = "";
							for (.@i = 0; .@i < .@opt_cnt; .@i++) {
							if( getelementofarray(getarg(0), .@i) == Job_Novice_High)
							.@jobname$ = "^0055FF전승^000000";
							else
							.@jobname$ = jobname(getelementofarray(getarg(0), .@i));
							.@menu$ = .@menu$ + .@jobname$ + ":";
							}
							.@menu$ = .@menu$+"^777777조금더 생각해볼게요.^000000";
							.@selected = select(.@menu$) - 1;
							if( .@selected < 0 || .@selected >= .@opt_cnt )
							close;
							next;
							mes .NPCName$;
						}
						.@class = getelementofarray(getarg(0), .@selected);
						if ((.@class == Job_Super_Novice || .@class == Job_Super_Baby) &&
								BaseLevel < .SNovice) {
							// Super Novice와
							// Super Baby는 첫 번째 클래스 중 하나에서 둘 다 선택할 수 있습니다.
							// 변경됩니다. 그렇기 때문에 레벨 요구 사항은 이전이 아닌 이후입니다.
							// 선택.
							mes "기본 수준의" + .SNovice +
								" 으로 전환해야 합니다." + jobname(.@class) + ".";
							return;
						}
						// Confirm the Class
						Confirm_Change(.@class, .@opt_cnt > 1);
						next;
						mes .NPCName$;
						}
						return;
					}


				// 실제 작업 변경을 실행하고 닫습니다.
				function	Job_Change	{
					.@previous_class = Class;
					.@to_cls = getarg(0);
					next;
					mes .NPCName$;
					mes "당신은 이제 " + callfunc("F_InsertArticle", jobname(.@to_cls)) + "입니다!";
					if (.@to_cls == Job_Novice_High && .LastJob)
						lastJob = Class; //재탄생을 위해 lastJob을 저장합니다.
					jobchange .@to_cls;
					if (.@to_cls == Job_Novice_High)
						resetlvl(1);
					else if (.@to_cls == Job_Baby) {
						resetstatus;
						resetskill;
						set SkillPoint,0;
					}
					specialeffect2 EF_ANGEL2;
					specialeffect2 EF_ELECTRIC;
					if (.@previous_class != Class) {
						if (.Platinum)
							callfunc "F_GetPlatinumSkills";
						if (.GetJobEquip)
							Get_Job_Equip();
					}
					close; // 변경 후 항상 닫힘
				}

				function	Confirm_Change	{
					// 플레이어가 .@class로 변경하고 싶다고 확인합니다.
					.@class = getarg(0, -1);
					.@back = getarg(1, false);
					if( .@class < 0 || eaclass(.@class) == -1 ) {
						mes "알 수 없는 클래스 오류.";
						close;
					}
					mes .NPCName$;
					mes "전직하시려는 직업이 ^0055FF" + jobname(.@class) + "^000000,맞습니까?";
					mes "선택은 한번 뿐이고 돌이킬 수 없으니";
					mes "신중하게 결정하십시오.";
					next;
					.@job_option$ = " 맞습니다. ^0055FF"+jobname(.@class)+"^000000 전직시켜주세요.";
					if( .@class == Job_Novice_High)
						.@job_option$ = " ~ ^0055FF전승^000000";
					
					if (select(.@job_option$+":^777777" + 
							((.@back) ?"조금 더 생각해 볼게요" : "Cancel") + "^000000") == 1) {
						Job_Change(.@class);
					}
					if (!.@back)
						close; // "Cancel" pressed
					return;
				}

				// 플레이어에게 직업 관련 아이템을 주는 함수
				// 해당 아이템은 기존 직업 전직 퀘스트의 보상입니다.
				function	Get_Job_Equip	{
				// 참고: 플레이어가 아이템을 잡을 수 없으면 아이템이 떨어지는 것입니다.
					// 하지만 아이템을 전혀 주지 않는 것보다는 낫습니다.
					.@eac = eaclass();
					if( .@eac&EAJL_FOURTH ) {
						// 4번째 클래스 아이템
						getitem 490087,1; // 모래시계 목걸이
					} else if( .@eac&EAJL_THIRD ) {
						// 3등급 아이템
						getitem 2795,1;	//	3등급마다 녹색사과 반지
						switch(BaseJob) {
							// 세 번째 Cl의 BaseJob
							// 노멀 써드, 베이비 써드, 트랜센디드 써드 Cls의 경우
							case Job_Knight:
								getitem 5746,1;	break;	//	Rune Circlet [1]
							case Job_Wizard:
								getitem 5753,1;	break;	//	Magic Stone Hat [1]
							case Job_Hunter:
								getitem 5748,1;	break;	//	Sniper Goggle [1]
							case Job_Priest:
								getitem 5747,1;	break;	//	Mitra [1]
							case Job_Blacksmith:
								getitem 5749,1;	break;	//	Driver Band [1]
							case Job_Assassin:
								getitem 5755,1;	break;	//	Silent Executor [1]
							case Job_Crusader:
								getitem 5757,1;	break;	//	Dip Schmidt Helm [1]
							case Job_Sage:
								getitem 5756,1;	break;	//	Wind Whisper [1]
							case Job_Bard:
								getitem 5751,1;	break;	//	Maestro Song's Hat [1]
							case Job_Dancer:
								getitem 5758,1;	break;	//	Dying Swan [1]
							case Job_Monk:
								getitem 5754,1;	break;	//	Blazing Soul [1]
							case Job_Alchemist:
								getitem 5752,1;	break;	//	Midas Whisper[1]
							case Job_Rogue:
								getitem 5750,1; 		//	Shadow Handicraft [1]
								getitem 6121,1;			//	Makeover Brush
								getitem 6122,1;	break;	//	Paint Brush
						}
					} else if (.@eac&EAJL_2) {
						// 두 번째 클래스(3번째 클래스가 아님)
						switch(BaseJob) {
							// Second Class
							case Job_Knight:
								getitem 1163,1;	break;	//	Claymore [0]
							case Job_Priest:
								getitem 1522,1;	break;	//	Stunner [0]
							case Job_Wizard:
								getitem 1617,1;	break;	//	Survivor's Rod [0]
							case Job_Blacksmith:
								getitem 1360,1;	break;	//	Two-Handed-Axe [1]
							case Job_Hunter:
								getitem 1718,1;	break;	//	Hunter Bow [0]
							case Job_Assassin:
								getitem 1254,1;	break;	//	Jamadhar [0]
							case Job_Crusader:
								getitem 1410,1;	break;	//	Lance [0]
							case Job_Monk:
								getitem 1807,1;	break;	//	Fist [0]
							case Job_Sage:
								getitem 1550,1;	break;	//	Book [3]
							case Job_Rogue:
								getitem 1222,1;	break;	//	Damascus [1]
							case Job_Alchemist:
								getitem 1126,1;	break;	//	Saber [2]
							case Job_Bard:
								getitem 1907,1;	break;	//	Guitar [0]
							case Job_Dancer:
								getitem 1960,1;	break;	//	Whip [1]
							case Job_Super_Novice:
								getitem 1208,1;	break;	//	Main Gauche [4]
							case Job_Star_Gladiator:
								getitem 1550,1;	break;	//	Book [3]
							case Job_Soul_Linker:
								getitem 1617,1;	break;	//	Survivor's Rod [0]
						}
					} else {
						// 두 번째 또는 세 번째 Cls 없음
						// => 첫 번째 Cls 또는 스위치에 포함되지 않음
						switch(BaseClass) {
							// First Class
							case Job_Swordman:
								getitem 1108,1;	break;	//	Blade [4]
							case Job_Mage:
								getitem 1602,1;	break;	//	Rod [4]
							case Job_Archer:
								getitem 1705,1;	break;	//	Composite Bow [4]
							case Job_Acolyte:
								getitem 1505,1;	break;	//	Mace [4]
							case Job_Merchant:
								getitem 1302,1;	break;	//	Axe [4]
							case Job_Thief:
								getitem 1208,1;	break;	//	Main Gauche [4]
							case Job_Gunslinger:
								getitem 13101,1; break;	//	Six Shooter [2]
							case Job_Ninja:
								getitem 13010,1; break;	//	Asura [2]
							}
						}
						return;
				}
			case 2:
				mes .NPCName$;
				mes "전직 조건이 궁금하십니까? 어떤";
				mes "차수의 전직이 궁금하지요?";
				next;
				switch(select("1차 직업과 확장직업 전직:2차 직업 전직:전승:3차 직업 전직:상위 확장 직업 전직:괜찮습니다.")){
					case 1:
						mes .NPCName$;
						mes "^0000cd1차 직업과 확장 직업으로의 전직^000000";
						mes "조건은 매우 간단합니다. ^0000cd직업 레벨이";
						mes "10이고 ^0000cd남아있는 스킬 포인트^000000가 없으면";
						mes "됩니다.";
						mes "단, 슈퍼노비스로 전직을 원한다면";
						mes "^0000cd베이스 레벨을 45^000000까지 올려야 합니다.";
						next;
						mes .NPCName$;
						mes "해당 조건을 만족하셨다면, 부스터 콜";
						mes "소지자에 한하여 제가 1차 전직을";
						mes "시켜드립니다.";
						mes "^0000cd전승 후의 1차 전직은 도와드리지 못^000000";
						mes "하지만 각 전직소로 안내를 해드립니다.";
						break;
					case 2:
						mes .NPCName$;
						mes "^0000cd2차 직업으로의 전직^000000조건이";
						mes "궁금하시군요.";
						mes "2차 전직은 ^0000cd1차 직업^000000을 가진 분들을";
						mes "대상으로 합니다.";
						next;
						mes .NPCName$;
						mes "^0000cd직업 레벨은 50^000000이어야하고 ^0000cd남아있는";
						mes "스킬 포인트가 없^000000으면 전직할 수";
						mes "있습니다.";
						next;
						mes .NPCName$;
						mes "해당 조건을 만족하셨다면, 부스터 콜";
						mes "소지자에 한하여 제가 2차 전직을";
						mes "시켜드립니다.";
						mes "^0000cd전승 후의 2차 전직은 도와드리지 못^000000";
						mes "하지만 베이스 레벨과 직업 레벨 업을";
						mes "도와드리며, 전직 장소인 발할라로";
						mes "안내를 해드립니다.";
						break;
					case 3:
						mes .NPCName$;
						mes "^0000cd전승^000000조건이 궁금하시군요.";
						mes "전승은 ^0000cd2차 직업^000000을 가진 분들을";
						mes "대상으로 합니다.";
						next;
						mes .NPCName$;
						mes "^0000cd베이스 레벨 99^000000까지, 그리고 ^0000cd직업";
						mes "레벨은 50^000000이어야하고 ^0000cd남아있는 스킬";
						mes "포인트가 없^000000으면 전직할 수 있습니다.";
						mes "만약 베이스 레벨과 직업 레벨이";
						mes "부족하다면  제가 레벨 업도";
						mes "도와드립니다.";
						next;
						mes .NPCName$;
						mes "해당 조건을 만족하셨다면, 부스터 콜";
						mes "소지자에 한하여 전승 장소인 발할라로";
						mes "안내를 해드립니다.";
						mes "부스터 콜 소지자에 한해 전승시";
						mes "필요한 비용이나 퀘스트 수행이 면제가";
						mes "되니 편안히 다녀오시면 되겠습니다.";
						break;
					case 4:
						mes .NPCName$;
						mes "^0000cd3차 직업으로의 전직^000000조건이";
						mes "궁금하시군요.";
						mes "3차 전직은 ^0000cd2차 직업^000000을 가진 분들을";
						mes "대상으로 합니다.";
						next;
						mes .NPCName$;
						mes "^0000cd베이스 레벨 99^000000까지, 그리고 ^0000cd직업";
						mes "레벨은 70^000000이어야 합니다.당연히";
						mes "^0000cd남아있는 스킬 포인트가 없^000000어야합니다.";
						mes "만약 베이스 레벨과 직업 레벨이";
						mes "부족하다면  제가 레벨 업도";
						mes "도와드립니다.";
						next;
						mes .NPCName$;
						mes "해당 조건을 만족하셨다면, 부스터 콜";
						mes "소지자에 한하여 제가 전직을";
						mes "시켜드립니다.";
						break;
					case 5:
						mes .NPCName$;
						mes "확장 직업군의 상위 직업으로의 전직";
						mes "조건이 궁금하시군요.";
						mes "확장 직업군은 현재의 직업에 따라";
						mes "전직 조건이 조금씩 다릅니다.";
						next;
						mes .NPCName$;
						mes "^0000cd먼저 태권은 직업 레벨이50^000000이어야";
						mes "전직이 가능합니다.";
						mes "^0000cd권성이나 소울리퍼는 베이스 레벨이";
						mes "99. 직업 레벨이 50^000000이어야 전직이";
						mes "가능하고요.";
						next;
						mes .NPCName$;
						mes "^0000cd슈퍼 노비스는 베이스 레벨이99, 직업";
						mes "레벨 또한 99^000000여야 전직이 가능합니다.";
						next;
						mes .NPCName$;
						mes "^0000cd나머지 확장 직업군은 베이스 레벨이99,";
						mes "직업 레벨 70^000000여야 전직이";
						mes "가능합니다.";
						next;
						mes .NPCName$;
						mes "^0000cd공통사항으로 전직시 남아있는";
						mes "스킬 포인트가 없^000000어야 전직 가능합니다.";
						next;
						mes .NPCName$;
						mes "해당 조건을 만족하셨다면, 부스터 콜";
						mes "소지자에 한하여 제가 전직을";
						mes "시켜드립니다.";
						break;
					case 6:
						mes .NPCName$;
						mes "알겠습니다. 그럼 전직 도움이";
						mes "필요하면 다시 찾아주십시오";
						break;
					}
			}
	} else {
		mes .NPCName$;
		mes "^0000cd<ITEM>[부스터 콜]<INFO>100337</INFO></ITEM>^000000이나 ^0000cd<ITEM>[프리미엄 부스터 콜]<INFO>101473</INFO></ITEM>^000000";
		mes "을 소지하지 않고 계시군요";
		mes "안타깝게도 제가 도와드릴 수 있는";
		mes "대상이 아닙니다.";
		end;
		}

	OnInit:
		// 초기화, 편집하지 마세요
		.NPCName$ = "[전직 요원]";
		
		// 설정
		.FourthClass = true;				// 네 번째 클래스를 활성화하시겠습니까?
		.FourthExpanded = true;
		.ThirdClass = true;					// 세 번째 클래스를 활성화하시겠습니까?
		.RebirthClass = true;				// 환생 수업을 활성화할까요?
		.SecondExpanded = true;				// 새로운 확장된 두 번째 클래스를 활성화합니다: Ex. 슈퍼노비스, 카게로우/오보로, 반란?
		.BabyNovice = true;					// 아기 초보자 수업을 활성화하시겠습니까? 플레이어가 직업을 얻으려면 부모가 있어야 하고 싶다면 비활성화하세요.
		.BabyClass = true;					// Baby 클래스를 활성화할까요?
		.BabyThird = true;					// Baby 세 번째 클래스를 활성화하시겠습니까?
		.BabyExpanded = true;				// Baby 확장 클래스 활성화: Ex. 베이비닌자, 베이비태권 등
		.BabySummoner = true;				// 아기 소환사를 활성화하시겠습니까?
		.LastJob = true;					// 선형 클래스 변경을 적용하시겠습니까?
		.SkillPointCheck = true;			// 플레이어가 모든 스킬 포인트를 사용하도록 강제하시겠습니까?
		.Platinum = true;					// 플래티넘 스킬을 자동으로 얻나요?
		.GetJobEquip = false;				// 직업 변경 시 직업 장비(주로 무기)를 얻나요?

		// 레벨 요구사항
		setarray .Req_First[0],1,10; 		// 1급이 되기 위한 최소 기본 레벨, Job 레벨
		setarray .Req_Second[0],1,40; 		// 2차 클래스로 전환하기 위한 최소 기본 레벨, Job 레벨
		setarray .Req_Rebirth[0],99,50;		// 최소 기본 레벨, 환생할 직업 레벨
		setarray .Req_Third[0],99,50;		// 최소 기본 레벨, 3급으로 변경하기 위한 직업 레벨
		setarray .Req_Fourth[0],200,70;		// 최소 기본 레벨, 4차 클래스로 변경하기 위한 Job 레벨
		setarray .Req_Exp_NJ_GS[0],99,70; 	// 확장닌자, 건슬링거로 변신하기 위한 최소 기본 레벨, 직업 레벨
		setarray .Req_Exp_SNOVI[0],99,99; 	// 익스팬디드 슈퍼노비스로 변신하기 위한 최소 베이스 레벨, 직업 레벨
		setarray .Req_SHandler[0],200,60;	// Minimum base level, job level to turn into Spirit Handler
		.SNovice = 45;						// 슈퍼노비스로 변신하기 위한 최소 기본 레벨
		
		// PACKETVER로 조정 설정
		if( PACKETVER < 20161207 ) {
			if( .BabyExpanded )
				debugmes "jobmaster: 오래된 PACKETVER로 인해 BabyExpanded가 비활성화되었습니다.";
			if( .BabySummoner )
				debugmes "jobmaster: 오래된 PACKETVER로 인해 BabySummoner가 비활성화되었습니다..";
			.BabyExpanded = false;
			.BabySummoner = false;
		}
        setunitdata (getnpcid(0), UNPC_GROUP_ID,0);
		setunittitle(getnpcid(0), "<메가 부스터 콜>");
		end;
}

sp_cor,98,136,4	script	부스터 인챈터(일루시온)	4_M_REPAIR,{
		mes "[메가 부스터 인챈터]";
		mes "안녕하세요.";
		mes "^0000cd메가 부스터팩^000000을 이용하시고 계신가요?";
		mes "에피소드17.2 클리어 특전을 받으신";
		mes "분들의 일루시온(귀속) 장비에";
		mes "인챈트를 해드리고 있습니다.";
		mes "지원하는 모험가 ^0000cd레벨은 130";
		mes "이상^000000입니다.";
		next;
		if(countitem(100337)) || (countitem(101473)){
			mes "[메가 부스터 인챈터]";
			mes "일루시온(귀속) 장비 인챈트를";
			mes "받아보시겠어요?";
			mes "인챈트 재료를 의문의 부품,";
			mes "코르 코어를 사용합니다.";
			next;
			if(baselevel < 130 ) goto LevelLow;
			switch(select("(귀속)일루시온 아머A/B:(귀속)일루시온 엔진윙A/B:(귀속)일루시온 레그A/B:(귀속)일루시온 부스터R/배틀칩R:(귀속)일루시온 부스터L/배틀칩L")){
				case 1:
					mes "[메가 부스터 인챈터]";
					mes "일루시온 아머(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 34;
					end;
				case 2:
					mes "[메가 부스터 인챈터]";
					mes "일루시온 엔징윙(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 39;
					end;
				case 3:
					mes "[메가 부스터 인챈터]";
					mes "일루시온 레그(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 40;
					end;
				case 4:
					mes "[메가 부스터 인챈터]";
					mes "일루시온 부스터R/배틀칩R(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 42;
					end;
				case 5:
					mes "[메가 부스터 인챈터]";
					mes "일루시온 부스터L/배틀칩L(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 43;
					end;
				}
		} else {
		mes "[메가 부스터 인챈터]";
		mes "^0000cd<ITEM>[부스터 콜]<INFO>100337</INFO></ITEM>^000000이나 ^0000cd<ITEM>[프리미엄 부스터 콜]<INFO>101473</INFO></ITEM>^000000";
		mes "을 소지하지 않고 계시군요";
		mes "안타깝게도 제가 도와드릴 수 있는";
		mes "대상이 아닙니다.";
		end;
		}

LevelLow:
		mes "레벨이 부족하여 해당 의뢰를 진행할";
		mes "수 없습니다.";
		end;
OnInit:
        setunitdata (getnpcid(0), UNPC_GROUP_ID,0);
		setunittitle(getnpcid(0), "<메가 부스터 콜>");
		end;
}

ba_maison,136,103,4	script	부스터 인챈터(오토매틱)	4_M_REPAIR,{
		mes "[메가 부스터 인챈터]";
		mes "안녕하세요.";
		mes "^0000cd메가 부스터팩^000000을 이용하시고 계신가요?";
		mes "에피소드17.2 클리어 특전을 받으신";
		mes "분들의 오토매틱(귀속) 장비에";
		mes "인챈트를 해드리고 있습니다.";
		mes "지원하는 모험가 ^0000cd레벨은 160";
		mes "이상^000000입니다.";
		next;
		if(countitem(100337)) || (countitem(101473)){
			mes "[메가 부스터 인챈터]";
			mes "오토매틱(귀속) 장비 인챈트를";
			mes "받아보시겠어요?";
			mes "인챈트 재료를 바르밀 티켓을 .";
			mes "사용합니다.";
			next;
			if(baselevel < 160 ) goto LevelLow;
			switch(select("(귀속)오토매틱 아머A/B:(귀속)오토매틱 엔진윙A/B:(귀속)오토매틱 레그A/B:(귀속)오토매틱 부스터R/배틀칩R:(귀속)오토매틱 부스터L/배틀칩L")){
				case 1:
					mes "[메가 부스터 인챈터]";
					mes "오토매틱 아머(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 44;
					end;
				case 2:
					mes "[메가 부스터 인챈터]";
					mes "오토매틱 엔징윙(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 45;
					end;
				case 3:
					mes "[메가 부스터 인챈터]";
					mes "오토매틱 레그(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 46;
					end;
				case 4:
					mes "[메가 부스터 인챈터]";
					mes "오토매틱 부스터R/배틀칩R(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 41;
					end;
				case 5:
					mes "[메가 부스터 인챈터]";
					mes "오토매틱 부스터L/배틀칩L(귀속)에 인챈트를";
					mes "합니다.";
					close2;
					item_enchant 35;
					end;
				}
		} else {
		mes "[메가 부스터 인챈터]";
		mes "^0000cd<ITEM>[부스터 콜]<INFO>100337</INFO></ITEM>^000000이나 ^0000cd<ITEM>[프리미엄 부스터 콜]<INFO>101473</INFO></ITEM>^000000";
		mes "을 소지하지 않고 계시군요";
		mes "안타깝게도 제가 도와드릴 수 있는";
		mes "대상이 아닙니다.";
		end;
		}

LevelLow:
		mes "레벨이 부족하여 해당 의뢰를 진행할";
		mes "수 없습니다.";
		end;

OnInit:
        setunitdata (getnpcid(0), UNPC_GROUP_ID,0);
		setunittitle(getnpcid(0), "<메가 부스터 콜>");
		end;
}